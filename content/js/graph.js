/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3158.0, "minX": 0.0, "maxY": 59512.0, "series": [{"data": [[0.0, 3158.0], [0.1, 3158.0], [0.2, 3158.0], [0.3, 3213.0], [0.4, 3213.0], [0.5, 3213.0], [0.6, 3439.0], [0.7, 3439.0], [0.8, 3439.0], [0.9, 3864.0], [1.0, 3864.0], [1.1, 4270.0], [1.2, 4270.0], [1.3, 4270.0], [1.4, 4404.0], [1.5, 4404.0], [1.6, 4404.0], [1.7, 4475.0], [1.8, 4475.0], [1.9, 4475.0], [2.0, 6073.0], [2.1, 6073.0], [2.2, 8471.0], [2.3, 8471.0], [2.4, 8471.0], [2.5, 19448.0], [2.6, 19448.0], [2.7, 19448.0], [2.8, 19967.0], [2.9, 19967.0], [3.0, 19967.0], [3.1, 20066.0], [3.2, 20066.0], [3.3, 20083.0], [3.4, 20083.0], [3.5, 20083.0], [3.6, 20135.0], [3.7, 20135.0], [3.8, 20135.0], [3.9, 20614.0], [4.0, 20614.0], [4.1, 20978.0], [4.2, 20978.0], [4.3, 20978.0], [4.4, 21260.0], [4.5, 21260.0], [4.6, 21260.0], [4.7, 21295.0], [4.8, 21295.0], [4.9, 21295.0], [5.0, 22420.0], [5.1, 22420.0], [5.2, 22715.0], [5.3, 22715.0], [5.4, 22715.0], [5.5, 23370.0], [5.6, 23370.0], [5.7, 23370.0], [5.8, 24440.0], [5.9, 24440.0], [6.0, 24440.0], [6.1, 24815.0], [6.2, 24815.0], [6.3, 25139.0], [6.4, 25139.0], [6.5, 25139.0], [6.6, 25268.0], [6.7, 25268.0], [6.8, 25268.0], [6.9, 25288.0], [7.0, 25288.0], [7.1, 25288.0], [7.2, 25300.0], [7.3, 25300.0], [7.4, 25365.0], [7.5, 25365.0], [7.6, 25365.0], [7.7, 25675.0], [7.8, 25675.0], [7.9, 25675.0], [8.0, 25698.0], [8.1, 25698.0], [8.2, 25766.0], [8.3, 25766.0], [8.4, 25766.0], [8.5, 26110.0], [8.6, 26110.0], [8.7, 26110.0], [8.8, 26558.0], [8.9, 26558.0], [9.0, 26558.0], [9.1, 26817.0], [9.2, 26817.0], [9.3, 27264.0], [9.4, 27264.0], [9.5, 27264.0], [9.6, 27580.0], [9.7, 27580.0], [9.8, 27580.0], [9.9, 27653.0], [10.0, 27653.0], [10.1, 27653.0], [10.2, 27787.0], [10.3, 27787.0], [10.4, 27897.0], [10.5, 27897.0], [10.6, 27897.0], [10.7, 27929.0], [10.8, 27929.0], [10.9, 27929.0], [11.0, 27944.0], [11.1, 27944.0], [11.2, 27944.0], [11.3, 28012.0], [11.4, 28012.0], [11.5, 28096.0], [11.6, 28096.0], [11.7, 28096.0], [11.8, 28264.0], [11.9, 28264.0], [12.0, 28264.0], [12.1, 28309.0], [12.2, 28309.0], [12.3, 28672.0], [12.4, 28672.0], [12.5, 28672.0], [12.6, 28703.0], [12.7, 28703.0], [12.8, 28703.0], [12.9, 28831.0], [13.0, 28831.0], [13.1, 28831.0], [13.2, 29163.0], [13.3, 29163.0], [13.4, 29262.0], [13.5, 29262.0], [13.6, 29262.0], [13.7, 29508.0], [13.8, 29508.0], [13.9, 29508.0], [14.0, 30404.0], [14.1, 30404.0], [14.2, 30404.0], [14.3, 31116.0], [14.4, 31116.0], [14.5, 31399.0], [14.6, 31399.0], [14.7, 31399.0], [14.8, 31478.0], [14.9, 31478.0], [15.0, 31478.0], [15.1, 31768.0], [15.2, 31768.0], [15.3, 31768.0], [15.4, 33133.0], [15.5, 33133.0], [15.6, 34206.0], [15.7, 34206.0], [15.8, 34206.0], [15.9, 34294.0], [16.0, 34294.0], [16.1, 34294.0], [16.2, 35611.0], [16.3, 35611.0], [16.4, 35706.0], [16.5, 35706.0], [16.6, 35706.0], [16.7, 36448.0], [16.8, 36448.0], [16.9, 36448.0], [17.0, 36660.0], [17.1, 36660.0], [17.2, 36660.0], [17.3, 36802.0], [17.4, 36802.0], [17.5, 37148.0], [17.6, 37148.0], [17.7, 37148.0], [17.8, 37173.0], [17.9, 37173.0], [18.0, 37173.0], [18.1, 37860.0], [18.2, 37860.0], [18.3, 37860.0], [18.4, 37895.0], [18.5, 37895.0], [18.6, 38008.0], [18.7, 38008.0], [18.8, 38008.0], [18.9, 38158.0], [19.0, 38158.0], [19.1, 38158.0], [19.2, 38251.0], [19.3, 38251.0], [19.4, 38304.0], [19.5, 38304.0], [19.6, 38304.0], [19.7, 38348.0], [19.8, 38348.0], [19.9, 38348.0], [20.0, 38437.0], [20.1, 38437.0], [20.2, 38437.0], [20.3, 38440.0], [20.4, 38440.0], [20.5, 38596.0], [20.6, 38596.0], [20.7, 38596.0], [20.8, 38631.0], [20.9, 38631.0], [21.0, 38631.0], [21.1, 38837.0], [21.2, 38837.0], [21.3, 38837.0], [21.4, 38871.0], [21.5, 38871.0], [21.6, 39026.0], [21.7, 39026.0], [21.8, 39026.0], [21.9, 39099.0], [22.0, 39099.0], [22.1, 39099.0], [22.2, 39224.0], [22.3, 39224.0], [22.4, 39224.0], [22.5, 39248.0], [22.6, 39248.0], [22.7, 39418.0], [22.8, 39418.0], [22.9, 39418.0], [23.0, 39440.0], [23.1, 39440.0], [23.2, 39440.0], [23.3, 39737.0], [23.4, 39737.0], [23.5, 39796.0], [23.6, 39796.0], [23.7, 39796.0], [23.8, 39856.0], [23.9, 39856.0], [24.0, 39856.0], [24.1, 40186.0], [24.2, 40186.0], [24.3, 40186.0], [24.4, 40264.0], [24.5, 40264.0], [24.6, 40271.0], [24.7, 40271.0], [24.8, 40271.0], [24.9, 40376.0], [25.0, 40376.0], [25.1, 40376.0], [25.2, 40424.0], [25.3, 40424.0], [25.4, 40424.0], [25.5, 40556.0], [25.6, 40556.0], [25.7, 40760.0], [25.8, 40760.0], [25.9, 40760.0], [26.0, 40986.0], [26.1, 40986.0], [26.2, 40986.0], [26.3, 41106.0], [26.4, 41106.0], [26.5, 41106.0], [26.6, 41301.0], [26.7, 41301.0], [26.8, 41432.0], [26.9, 41432.0], [27.0, 41432.0], [27.1, 41467.0], [27.2, 41467.0], [27.3, 41467.0], [27.4, 41548.0], [27.5, 41548.0], [27.6, 41557.0], [27.7, 41557.0], [27.8, 41557.0], [27.9, 41628.0], [28.0, 41628.0], [28.1, 41628.0], [28.2, 41684.0], [28.3, 41684.0], [28.4, 41684.0], [28.5, 41768.0], [28.6, 41768.0], [28.7, 41820.0], [28.8, 41820.0], [28.9, 41820.0], [29.0, 41820.0], [29.1, 41820.0], [29.2, 41820.0], [29.3, 41955.0], [29.4, 41955.0], [29.5, 41955.0], [29.6, 41978.0], [29.7, 41978.0], [29.8, 42054.0], [29.9, 42054.0], [30.0, 42054.0], [30.1, 42092.0], [30.2, 42092.0], [30.3, 42092.0], [30.4, 42099.0], [30.5, 42099.0], [30.6, 42099.0], [30.7, 42159.0], [30.8, 42159.0], [30.9, 42184.0], [31.0, 42184.0], [31.1, 42184.0], [31.2, 42185.0], [31.3, 42185.0], [31.4, 42185.0], [31.5, 42205.0], [31.6, 42205.0], [31.7, 42219.0], [31.8, 42219.0], [31.9, 42219.0], [32.0, 42256.0], [32.1, 42256.0], [32.2, 42256.0], [32.3, 42281.0], [32.4, 42281.0], [32.5, 42281.0], [32.6, 42318.0], [32.7, 42318.0], [32.8, 42342.0], [32.9, 42342.0], [33.0, 42342.0], [33.1, 42397.0], [33.2, 42397.0], [33.3, 42397.0], [33.4, 42437.0], [33.5, 42437.0], [33.6, 42437.0], [33.7, 42509.0], [33.8, 42509.0], [33.9, 42544.0], [34.0, 42544.0], [34.1, 42544.0], [34.2, 42627.0], [34.3, 42627.0], [34.4, 42627.0], [34.5, 42902.0], [34.6, 42902.0], [34.7, 43001.0], [34.8, 43001.0], [34.9, 43001.0], [35.0, 43083.0], [35.1, 43083.0], [35.2, 43083.0], [35.3, 43151.0], [35.4, 43151.0], [35.5, 43151.0], [35.6, 43534.0], [35.7, 43534.0], [35.8, 43585.0], [35.9, 43585.0], [36.0, 43585.0], [36.1, 43627.0], [36.2, 43627.0], [36.3, 43627.0], [36.4, 43987.0], [36.5, 43987.0], [36.6, 43987.0], [36.7, 44379.0], [36.8, 44379.0], [36.9, 44448.0], [37.0, 44448.0], [37.1, 44448.0], [37.2, 44452.0], [37.3, 44452.0], [37.4, 44452.0], [37.5, 44699.0], [37.6, 44699.0], [37.7, 44699.0], [37.8, 45047.0], [37.9, 45047.0], [38.0, 45078.0], [38.1, 45078.0], [38.2, 45078.0], [38.3, 45235.0], [38.4, 45235.0], [38.5, 45235.0], [38.6, 45274.0], [38.7, 45274.0], [38.8, 45277.0], [38.9, 45277.0], [39.0, 45277.0], [39.1, 45306.0], [39.2, 45306.0], [39.3, 45306.0], [39.4, 45311.0], [39.5, 45311.0], [39.6, 45311.0], [39.7, 45372.0], [39.8, 45372.0], [39.9, 45380.0], [40.0, 45380.0], [40.1, 45380.0], [40.2, 45549.0], [40.3, 45549.0], [40.4, 45549.0], [40.5, 45569.0], [40.6, 45569.0], [40.7, 45569.0], [40.8, 45585.0], [40.9, 45585.0], [41.0, 45613.0], [41.1, 45613.0], [41.2, 45613.0], [41.3, 45650.0], [41.4, 45650.0], [41.5, 45650.0], [41.6, 45685.0], [41.7, 45685.0], [41.8, 45685.0], [41.9, 45844.0], [42.0, 45844.0], [42.1, 45874.0], [42.2, 45874.0], [42.3, 45874.0], [42.4, 46099.0], [42.5, 46099.0], [42.6, 46099.0], [42.7, 46147.0], [42.8, 46147.0], [42.9, 46249.0], [43.0, 46249.0], [43.1, 46249.0], [43.2, 46367.0], [43.3, 46367.0], [43.4, 46367.0], [43.5, 46494.0], [43.6, 46494.0], [43.7, 46494.0], [43.8, 46499.0], [43.9, 46499.0], [44.0, 46812.0], [44.1, 46812.0], [44.2, 46812.0], [44.3, 46900.0], [44.4, 46900.0], [44.5, 46900.0], [44.6, 46982.0], [44.7, 46982.0], [44.8, 46982.0], [44.9, 47041.0], [45.0, 47041.0], [45.1, 47326.0], [45.2, 47326.0], [45.3, 47326.0], [45.4, 47547.0], [45.5, 47547.0], [45.6, 47547.0], [45.7, 47635.0], [45.8, 47635.0], [45.9, 47635.0], [46.0, 47705.0], [46.1, 47705.0], [46.2, 47728.0], [46.3, 47728.0], [46.4, 47728.0], [46.5, 47790.0], [46.6, 47790.0], [46.7, 47790.0], [46.8, 48005.0], [46.9, 48005.0], [47.0, 48039.0], [47.1, 48039.0], [47.2, 48039.0], [47.3, 48073.0], [47.4, 48073.0], [47.5, 48073.0], [47.6, 48154.0], [47.7, 48154.0], [47.8, 48154.0], [47.9, 48213.0], [48.0, 48213.0], [48.1, 48245.0], [48.2, 48245.0], [48.3, 48245.0], [48.4, 48855.0], [48.5, 48855.0], [48.6, 48855.0], [48.7, 48936.0], [48.8, 48936.0], [48.9, 48936.0], [49.0, 48956.0], [49.1, 48956.0], [49.2, 49581.0], [49.3, 49581.0], [49.4, 49581.0], [49.5, 49937.0], [49.6, 49937.0], [49.7, 49937.0], [49.8, 49991.0], [49.9, 49991.0], [50.0, 49991.0], [50.1, 49994.0], [50.2, 49994.0], [50.3, 50501.0], [50.4, 50501.0], [50.5, 50501.0], [50.6, 50557.0], [50.7, 50557.0], [50.8, 50557.0], [50.9, 50613.0], [51.0, 50613.0], [51.1, 50730.0], [51.2, 50730.0], [51.3, 50730.0], [51.4, 50733.0], [51.5, 50733.0], [51.6, 50733.0], [51.7, 50748.0], [51.8, 50748.0], [51.9, 50748.0], [52.0, 51159.0], [52.1, 51159.0], [52.2, 51356.0], [52.3, 51356.0], [52.4, 51356.0], [52.5, 51462.0], [52.6, 51462.0], [52.7, 51462.0], [52.8, 51885.0], [52.9, 51885.0], [53.0, 51885.0], [53.1, 51902.0], [53.2, 51902.0], [53.3, 51983.0], [53.4, 51983.0], [53.5, 51983.0], [53.6, 52164.0], [53.7, 52164.0], [53.8, 52164.0], [53.9, 52312.0], [54.0, 52312.0], [54.1, 52638.0], [54.2, 52638.0], [54.3, 52638.0], [54.4, 52646.0], [54.5, 52646.0], [54.6, 52646.0], [54.7, 52662.0], [54.8, 52662.0], [54.9, 52662.0], [55.0, 52762.0], [55.1, 52762.0], [55.2, 52816.0], [55.3, 52816.0], [55.4, 52816.0], [55.5, 53044.0], [55.6, 53044.0], [55.7, 53044.0], [55.8, 53099.0], [55.9, 53099.0], [56.0, 53099.0], [56.1, 53240.0], [56.2, 53240.0], [56.3, 53288.0], [56.4, 53288.0], [56.5, 53288.0], [56.6, 53306.0], [56.7, 53306.0], [56.8, 53306.0], [56.9, 53451.0], [57.0, 53451.0], [57.1, 53451.0], [57.2, 53466.0], [57.3, 53466.0], [57.4, 53609.0], [57.5, 53609.0], [57.6, 53609.0], [57.7, 53626.0], [57.8, 53626.0], [57.9, 53626.0], [58.0, 53771.0], [58.1, 53771.0], [58.2, 53802.0], [58.3, 53802.0], [58.4, 53802.0], [58.5, 53968.0], [58.6, 53968.0], [58.7, 53968.0], [58.8, 53996.0], [58.9, 53996.0], [59.0, 53996.0], [59.1, 54124.0], [59.2, 54124.0], [59.3, 54191.0], [59.4, 54191.0], [59.5, 54191.0], [59.6, 54445.0], [59.7, 54445.0], [59.8, 54445.0], [59.9, 54963.0], [60.0, 54963.0], [60.1, 54963.0], [60.2, 55022.0], [60.3, 55022.0], [60.4, 55039.0], [60.5, 55039.0], [60.6, 55039.0], [60.7, 55076.0], [60.8, 55076.0], [60.9, 55076.0], [61.0, 55166.0], [61.1, 55166.0], [61.2, 55166.0], [61.3, 55216.0], [61.4, 55216.0], [61.5, 55241.0], [61.6, 55241.0], [61.7, 55241.0], [61.8, 55329.0], [61.9, 55329.0], [62.0, 55329.0], [62.1, 55612.0], [62.2, 55612.0], [62.3, 55648.0], [62.4, 55648.0], [62.5, 55648.0], [62.6, 55654.0], [62.7, 55654.0], [62.8, 55654.0], [62.9, 55715.0], [63.0, 55715.0], [63.1, 55715.0], [63.2, 55721.0], [63.3, 55721.0], [63.4, 55861.0], [63.5, 55861.0], [63.6, 55861.0], [63.7, 55933.0], [63.8, 55933.0], [63.9, 55933.0], [64.0, 56143.0], [64.1, 56143.0], [64.2, 56143.0], [64.3, 56375.0], [64.4, 56375.0], [64.5, 56509.0], [64.6, 56509.0], [64.7, 56509.0], [64.8, 56599.0], [64.9, 56599.0], [65.0, 56599.0], [65.1, 56658.0], [65.2, 56658.0], [65.3, 56658.0], [65.4, 56984.0], [65.5, 56984.0], [65.6, 57047.0], [65.7, 57047.0], [65.8, 57047.0], [65.9, 57144.0], [66.0, 57144.0], [66.1, 57144.0], [66.2, 57211.0], [66.3, 57211.0], [66.4, 57502.0], [66.5, 57502.0], [66.6, 57502.0], [66.7, 57504.0], [66.8, 57504.0], [66.9, 57504.0], [67.0, 57739.0], [67.1, 57739.0], [67.2, 57739.0], [67.3, 57772.0], [67.4, 57772.0], [67.5, 57849.0], [67.6, 57849.0], [67.7, 57849.0], [67.8, 57942.0], [67.9, 57942.0], [68.0, 57942.0], [68.1, 57952.0], [68.2, 57952.0], [68.3, 57952.0], [68.4, 58080.0], [68.5, 58080.0], [68.6, 58134.0], [68.7, 58134.0], [68.8, 58134.0], [68.9, 58208.0], [69.0, 58208.0], [69.1, 58208.0], [69.2, 58235.0], [69.3, 58235.0], [69.4, 58250.0], [69.5, 58250.0], [69.6, 58250.0], [69.7, 58369.0], [69.8, 58369.0], [69.9, 58369.0], [70.0, 58491.0], [70.1, 58491.0], [70.2, 58491.0], [70.3, 58532.0], [70.4, 58532.0], [70.5, 58559.0], [70.6, 58559.0], [70.7, 58559.0], [70.8, 58568.0], [70.9, 58568.0], [71.0, 58568.0], [71.1, 58767.0], [71.2, 58767.0], [71.3, 58767.0], [71.4, 58769.0], [71.5, 58769.0], [71.6, 58769.0], [71.7, 58769.0], [71.8, 58769.0], [71.9, 58770.0], [72.0, 58770.0], [72.1, 58770.0], [72.2, 58770.0], [72.3, 58770.0], [72.4, 58770.0], [72.5, 58770.0], [72.6, 58770.0], [72.7, 58771.0], [72.8, 58771.0], [72.9, 58771.0], [73.0, 58772.0], [73.1, 58772.0], [73.2, 58772.0], [73.3, 58772.0], [73.4, 58772.0], [73.5, 58773.0], [73.6, 58773.0], [73.7, 58773.0], [73.8, 58774.0], [73.9, 58774.0], [74.0, 58774.0], [74.1, 58774.0], [74.2, 58774.0], [74.3, 58774.0], [74.4, 58776.0], [74.5, 58776.0], [74.6, 58777.0], [74.7, 58777.0], [74.8, 58777.0], [74.9, 58777.0], [75.0, 58777.0], [75.1, 58777.0], [75.2, 58777.0], [75.3, 58777.0], [75.4, 58777.0], [75.5, 58777.0], [75.6, 58777.0], [75.7, 58778.0], [75.8, 58778.0], [75.9, 58778.0], [76.0, 58778.0], [76.1, 58778.0], [76.2, 58778.0], [76.3, 58778.0], [76.4, 58778.0], [76.5, 58778.0], [76.6, 58778.0], [76.7, 58778.0], [76.8, 58778.0], [76.9, 58778.0], [77.0, 58778.0], [77.1, 58779.0], [77.2, 58779.0], [77.3, 58779.0], [77.4, 58779.0], [77.5, 58779.0], [77.6, 58779.0], [77.7, 58779.0], [77.8, 58779.0], [77.9, 58780.0], [78.0, 58780.0], [78.1, 58780.0], [78.2, 58780.0], [78.3, 58780.0], [78.4, 58780.0], [78.5, 58781.0], [78.6, 58781.0], [78.7, 58782.0], [78.8, 58782.0], [78.9, 58782.0], [79.0, 58782.0], [79.1, 58782.0], [79.2, 58782.0], [79.3, 58782.0], [79.4, 58782.0], [79.5, 58782.0], [79.6, 58783.0], [79.7, 58783.0], [79.8, 58783.0], [79.9, 58783.0], [80.0, 58783.0], [80.1, 58783.0], [80.2, 58783.0], [80.3, 58783.0], [80.4, 58783.0], [80.5, 58783.0], [80.6, 58783.0], [80.7, 58784.0], [80.8, 58784.0], [80.9, 58785.0], [81.0, 58785.0], [81.1, 58785.0], [81.2, 58785.0], [81.3, 58785.0], [81.4, 58785.0], [81.5, 58785.0], [81.6, 58785.0], [81.7, 58786.0], [81.8, 58786.0], [81.9, 58786.0], [82.0, 58786.0], [82.1, 58786.0], [82.2, 58786.0], [82.3, 58786.0], [82.4, 58786.0], [82.5, 58786.0], [82.6, 58786.0], [82.7, 58786.0], [82.8, 58787.0], [82.9, 58787.0], [83.0, 58787.0], [83.1, 58787.0], [83.2, 58787.0], [83.3, 58787.0], [83.4, 58787.0], [83.5, 58787.0], [83.6, 58787.0], [83.7, 58788.0], [83.8, 58788.0], [83.9, 58788.0], [84.0, 58788.0], [84.1, 58788.0], [84.2, 58788.0], [84.3, 58788.0], [84.4, 58788.0], [84.5, 58788.0], [84.6, 58788.0], [84.7, 58789.0], [84.8, 58789.0], [84.9, 58789.0], [85.0, 58789.0], [85.1, 58789.0], [85.2, 58789.0], [85.3, 58789.0], [85.4, 58789.0], [85.5, 58789.0], [85.6, 58790.0], [85.7, 58790.0], [85.8, 58790.0], [85.9, 58790.0], [86.0, 58790.0], [86.1, 58791.0], [86.2, 58791.0], [86.3, 58791.0], [86.4, 58791.0], [86.5, 58791.0], [86.6, 58791.0], [86.7, 58791.0], [86.8, 58791.0], [86.9, 58792.0], [87.0, 58792.0], [87.1, 58792.0], [87.2, 58792.0], [87.3, 58792.0], [87.4, 58792.0], [87.5, 58792.0], [87.6, 58792.0], [87.7, 58792.0], [87.8, 58793.0], [87.9, 58793.0], [88.0, 58793.0], [88.1, 58793.0], [88.2, 58793.0], [88.3, 58793.0], [88.4, 58793.0], [88.5, 58793.0], [88.6, 58793.0], [88.7, 58793.0], [88.8, 58793.0], [88.9, 58793.0], [89.0, 58793.0], [89.1, 58793.0], [89.2, 58793.0], [89.3, 58793.0], [89.4, 58793.0], [89.5, 58793.0], [89.6, 58793.0], [89.7, 58794.0], [89.8, 58794.0], [89.9, 58794.0], [90.0, 58794.0], [90.1, 58794.0], [90.2, 58794.0], [90.3, 58794.0], [90.4, 58794.0], [90.5, 58794.0], [90.6, 58794.0], [90.7, 58794.0], [90.8, 58795.0], [90.9, 58795.0], [91.0, 58796.0], [91.1, 58796.0], [91.2, 58796.0], [91.3, 58797.0], [91.4, 58797.0], [91.5, 58797.0], [91.6, 58797.0], [91.7, 58797.0], [91.8, 58797.0], [91.9, 58797.0], [92.0, 58797.0], [92.1, 58798.0], [92.2, 58798.0], [92.3, 58798.0], [92.4, 58798.0], [92.5, 58798.0], [92.6, 58798.0], [92.7, 58799.0], [92.8, 58799.0], [92.9, 58799.0], [93.0, 58799.0], [93.1, 58799.0], [93.2, 58800.0], [93.3, 58800.0], [93.4, 58800.0], [93.5, 58800.0], [93.6, 58800.0], [93.7, 58800.0], [93.8, 58801.0], [93.9, 58801.0], [94.0, 58801.0], [94.1, 58801.0], [94.2, 58801.0], [94.3, 58801.0], [94.4, 58801.0], [94.5, 58801.0], [94.6, 58801.0], [94.7, 58801.0], [94.8, 58801.0], [94.9, 58802.0], [95.0, 58802.0], [95.1, 58804.0], [95.2, 58804.0], [95.3, 58804.0], [95.4, 58805.0], [95.5, 58805.0], [95.6, 58805.0], [95.7, 58808.0], [95.8, 58808.0], [95.9, 58808.0], [96.0, 58813.0], [96.1, 58813.0], [96.2, 58814.0], [96.3, 58814.0], [96.4, 58814.0], [96.5, 58814.0], [96.6, 58814.0], [96.7, 58814.0], [96.8, 58819.0], [96.9, 58819.0], [97.0, 58833.0], [97.1, 58833.0], [97.2, 58833.0], [97.3, 58860.0], [97.4, 58860.0], [97.5, 58860.0], [97.6, 58928.0], [97.7, 58928.0], [97.8, 58928.0], [97.9, 58937.0], [98.0, 58937.0], [98.1, 58960.0], [98.2, 58960.0], [98.3, 58960.0], [98.4, 58993.0], [98.5, 58993.0], [98.6, 58993.0], [98.7, 59012.0], [98.8, 59012.0], [98.9, 59012.0], [99.0, 59242.0], [99.1, 59242.0], [99.2, 59339.0], [99.3, 59339.0], [99.4, 59339.0], [99.5, 59444.0], [99.6, 59444.0], [99.7, 59444.0], [99.8, 59512.0], [99.9, 59512.0], [100.0, 59512.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 3100.0, "maxY": 81.0, "series": [{"data": [[33100.0, 1.0], [35700.0, 1.0], [37100.0, 2.0], [38100.0, 1.0], [38300.0, 2.0], [38500.0, 1.0], [40100.0, 1.0], [39700.0, 2.0], [40500.0, 1.0], [40700.0, 1.0], [40900.0, 1.0], [40300.0, 1.0], [41300.0, 1.0], [42100.0, 3.0], [42300.0, 3.0], [42500.0, 2.0], [41100.0, 1.0], [41500.0, 2.0], [41900.0, 2.0], [42900.0, 1.0], [41700.0, 1.0], [43900.0, 1.0], [43500.0, 2.0], [44300.0, 1.0], [43100.0, 1.0], [45300.0, 4.0], [46300.0, 1.0], [46100.0, 1.0], [46900.0, 2.0], [45500.0, 3.0], [47300.0, 1.0], [47700.0, 3.0], [48900.0, 2.0], [48100.0, 1.0], [47500.0, 1.0], [50500.0, 2.0], [50700.0, 3.0], [49900.0, 3.0], [51100.0, 1.0], [49500.0, 1.0], [51900.0, 2.0], [51300.0, 1.0], [52100.0, 1.0], [52700.0, 1.0], [52300.0, 1.0], [54100.0, 2.0], [53700.0, 1.0], [55100.0, 1.0], [53900.0, 2.0], [53300.0, 1.0], [54900.0, 1.0], [55700.0, 2.0], [55300.0, 1.0], [56300.0, 1.0], [56900.0, 1.0], [57100.0, 1.0], [56100.0, 1.0], [56500.0, 2.0], [55900.0, 1.0], [58900.0, 4.0], [57700.0, 2.0], [58700.0, 81.0], [57900.0, 2.0], [57500.0, 2.0], [58500.0, 3.0], [59300.0, 1.0], [58100.0, 1.0], [58300.0, 1.0], [59500.0, 1.0], [3100.0, 1.0], [3200.0, 1.0], [3400.0, 1.0], [3800.0, 1.0], [4200.0, 1.0], [4400.0, 2.0], [6000.0, 1.0], [8400.0, 1.0], [19400.0, 1.0], [19900.0, 1.0], [20000.0, 2.0], [20100.0, 1.0], [21200.0, 2.0], [20600.0, 1.0], [20900.0, 1.0], [22400.0, 1.0], [23300.0, 1.0], [22700.0, 1.0], [24400.0, 1.0], [25200.0, 2.0], [25300.0, 2.0], [24800.0, 1.0], [25100.0, 1.0], [25700.0, 1.0], [25600.0, 2.0], [26100.0, 1.0], [26500.0, 1.0], [27200.0, 1.0], [27600.0, 1.0], [26800.0, 1.0], [27500.0, 1.0], [28000.0, 2.0], [27900.0, 2.0], [28200.0, 1.0], [27800.0, 1.0], [28300.0, 1.0], [27700.0, 1.0], [28600.0, 1.0], [29100.0, 1.0], [29200.0, 1.0], [29500.0, 1.0], [28800.0, 1.0], [28700.0, 1.0], [30400.0, 1.0], [31400.0, 1.0], [31700.0, 1.0], [31100.0, 1.0], [31300.0, 1.0], [34200.0, 2.0], [35600.0, 1.0], [36400.0, 1.0], [36800.0, 1.0], [36600.0, 1.0], [38400.0, 2.0], [37800.0, 2.0], [38600.0, 1.0], [38800.0, 2.0], [38200.0, 1.0], [38000.0, 1.0], [40200.0, 2.0], [39800.0, 1.0], [39000.0, 2.0], [39400.0, 2.0], [39200.0, 2.0], [40400.0, 1.0], [42000.0, 3.0], [42400.0, 1.0], [42200.0, 4.0], [41800.0, 2.0], [41400.0, 2.0], [41600.0, 2.0], [43000.0, 2.0], [42600.0, 1.0], [44600.0, 1.0], [44400.0, 2.0], [45000.0, 2.0], [43600.0, 1.0], [45200.0, 3.0], [45600.0, 3.0], [47000.0, 1.0], [45800.0, 2.0], [46800.0, 1.0], [46400.0, 2.0], [46200.0, 1.0], [46000.0, 1.0], [47600.0, 1.0], [48200.0, 2.0], [48800.0, 1.0], [48000.0, 3.0], [50600.0, 1.0], [51400.0, 1.0], [52600.0, 3.0], [53000.0, 2.0], [52800.0, 1.0], [53200.0, 2.0], [51800.0, 1.0], [55000.0, 3.0], [53800.0, 1.0], [53600.0, 2.0], [55200.0, 2.0], [54400.0, 1.0], [53400.0, 2.0], [55800.0, 1.0], [57200.0, 1.0], [55600.0, 3.0], [56600.0, 1.0], [57000.0, 1.0], [59000.0, 1.0], [58800.0, 16.0], [59200.0, 1.0], [58200.0, 3.0], [58000.0, 1.0], [58400.0, 1.0], [57800.0, 1.0], [59400.0, 1.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 59500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 104.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 262.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 262.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 104.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576154749E12, "maxY": 30.0, "series": [{"data": [[1.576155037E12, 30.0], [1.576155078E12, 30.0], [1.576155291E12, 30.0], [1.576155168E12, 30.0], [1.576155209E12, 30.0], [1.576154775E12, 30.0], [1.576155201E12, 30.0], [1.576154906E12, 30.0], [1.576154791E12, 30.0], [1.576155004E12, 30.0], [1.576154922E12, 30.0], [1.57615475E12, 30.0], [1.576154963E12, 30.0], [1.576155127E12, 30.0], [1.576155299E12, 30.0], [1.576155185E12, 30.0], [1.576155316E12, 21.0], [1.576154923E12, 30.0], [1.5761548E12, 30.0], [1.576155267E12, 30.0], [1.576155324E12, 2.0], [1.576155242E12, 30.0], [1.576155021E12, 30.0], [1.576155234E12, 30.0], [1.576155062E12, 30.0], [1.576155275E12, 30.0], [1.576155193E12, 30.0], [1.576155208E12, 30.0], [1.576155036E12, 30.0], [1.576155249E12, 30.0], [1.576154995E12, 30.0], [1.576154864E12, 30.0], [1.576155077E12, 30.0], [1.576155118E12, 30.0], [1.576154749E12, 30.0], [1.576154962E12, 30.0], [1.57615479E12, 30.0], [1.576155003E12, 30.0], [1.576154921E12, 30.0], [1.576155298E12, 30.0], [1.576155126E12, 30.0], [1.576155216E12, 30.0], [1.576155061E12, 30.0], [1.576155274E12, 30.0], [1.57615484E12, 30.0], [1.576155266E12, 30.0], [1.576154881E12, 30.0], [1.576155094E12, 30.0], [1.576155323E12, 4.0], [1.5761552E12, 30.0], [1.57615502E12, 30.0], [1.576155233E12, 30.0], [1.576154822E12, 30.0], [1.576155035E12, 30.0], [1.576154945E12, 30.0], [1.576155158E12, 30.0], [1.576154863E12, 30.0], [1.576155076E12, 30.0], [1.57615492E12, 30.0], [1.576154961E12, 30.0], [1.576154879E12, 30.0], [1.576155256E12, 30.0], [1.576155297E12, 30.0], [1.576155002E12, 30.0], [1.576155043E12, 30.0], [1.576155101E12, 30.0], [1.576155314E12, 24.0], [1.576155142E12, 30.0], [1.576154839E12, 30.0], [1.576155183E12, 30.0], [1.576154814E12, 30.0], [1.576154978E12, 30.0], [1.576155322E12, 6.0], [1.576154937E12, 30.0], [1.57615515E12, 30.0], [1.57615478E12, 30.0], [1.576155206E12, 30.0], [1.576155296E12, 30.0], [1.576155124E12, 30.0], [1.576154903E12, 30.0], [1.576154821E12, 30.0], [1.576155247E12, 30.0], [1.576154862E12, 30.0], [1.576154878E12, 30.0], [1.576155255E12, 30.0], [1.576155083E12, 30.0], [1.576154788E12, 30.0], [1.576155214E12, 30.0], [1.576155313E12, 25.0], [1.576154805E12, 30.0], [1.576155018E12, 30.0], [1.576155059E12, 30.0], [1.576155141E12, 30.0], [1.576154944E12, 30.0], [1.576154985E12, 30.0], [1.576154936E12, 30.0], [1.57615519E12, 30.0], [1.576154779E12, 30.0], [1.576155295E12, 30.0], [1.57615491E12, 30.0], [1.576154861E12, 30.0], [1.576154902E12, 30.0], [1.576155205E12, 30.0], [1.57615482E12, 30.0], [1.576155246E12, 30.0], [1.576154836E12, 30.0], [1.576155E12, 30.0], [1.576155213E12, 30.0], [1.576154959E12, 30.0], [1.576154845E12, 30.0], [1.576155099E12, 30.0], [1.576155189E12, 30.0], [1.576154804E12, 30.0], [1.576155017E12, 30.0], [1.576154796E12, 30.0], [1.576155222E12, 30.0], [1.576155312E12, 26.0], [1.576154927E12, 30.0], [1.576154755E12, 30.0], [1.576155025E12, 30.0], [1.57615532E12, 7.5], [1.576154853E12, 30.0], [1.576155107E12, 30.0], [1.576155122E12, 30.0], [1.576155163E12, 30.0], [1.57615504E12, 30.0], [1.576155253E12, 30.0], [1.576155081E12, 30.0], [1.576155294E12, 30.0], [1.576155245E12, 30.0], [1.576154876E12, 30.0], [1.57615513E12, 30.0], [1.576154958E12, 30.0], [1.576155171E12, 30.0], [1.576155016E12, 30.0], [1.576154844E12, 30.0], [1.57615527E12, 30.0], [1.576154975E12, 30.0], [1.57615518E12, 30.0], [1.576154795E12, 30.0], [1.576155311E12, 27.5], [1.576154926E12, 30.0], [1.576155139E12, 30.0], [1.576154983E12, 30.0], [1.576155155E12, 30.0], [1.576155319E12, 10.0], [1.576155147E12, 30.0], [1.576155024E12, 30.0], [1.576154852E12, 30.0], [1.57615508E12, 30.0], [1.576155121E12, 30.0], [1.576155334E12, 1.0], [1.576155252E12, 30.0], [1.576154752E12, 30.0], [1.576154965E12, 30.0], [1.576155178E12, 30.0], [1.576154793E12, 30.0], [1.576154957E12, 30.0], [1.576155211E12, 30.0], [1.576154916E12, 30.0], [1.576155228E12, 30.0], [1.576154843E12, 30.0], [1.576155146E12, 30.0], [1.576154974E12, 30.0], [1.576155187E12, 30.0], [1.576154925E12, 30.0], [1.576155138E12, 30.0], [1.576155179E12, 30.0], [1.576154884E12, 30.0], [1.57615531E12, 29.0], [1.576154941E12, 30.0], [1.5761549E12, 30.0], [1.576155064E12, 30.0], [1.576155236E12, 30.0], [1.576154851E12, 30.0], [1.576155079E12, 30.0], [1.576155292E12, 30.0], [1.576154997E12, 30.0], [1.576155251E12, 30.0], [1.576154776E12, 30.0], [1.57615512E12, 30.0], [1.576154792E12, 30.0], [1.576155259E12, 30.0], [1.576154751E12, 30.0], [1.576154964E12, 30.0], [1.576155128E12, 30.0], [1.576155087E12, 30.0], [1.576155186E12, 30.0], [1.576155317E12, 15.0], [1.576155096E12, 30.0], [1.576155309E12, 30.0], [1.576154924E12, 30.0], [1.576155153E12, 30.0], [1.576154858E12, 30.0], [1.576154899E12, 30.0], [1.576155063E12, 30.0], [1.576154768E12, 30.0], [1.576154981E12, 30.0], [1.576155194E12, 30.0], [1.576155235E12, 30.0]], "isOverall": false, "label": "GetRatesAvailability", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.576155334E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 19448.0, "minX": 1.0, "maxY": 58799.0, "series": [{"data": [[2.0, 25139.0], [3.0, 26558.0], [4.0, 27929.0], [5.0, 28672.0], [6.0, 27787.0], [7.0, 28703.0], [8.0, 28309.0], [9.0, 21295.0], [10.0, 20978.0], [11.0, 20614.0], [12.0, 19448.0], [13.0, 25365.0], [14.0, 42092.0], [15.0, 20135.0], [16.0, 25288.0], [1.0, 58782.0], [17.0, 46494.0], [18.0, 42184.0], [19.0, 49581.0], [20.0, 57047.0], [21.0, 22715.0], [22.0, 46099.0], [23.0, 24815.0], [24.0, 58783.0], [25.0, 39224.0], [26.0, 58791.0], [27.0, 58799.0], [28.0, 58783.0], [29.0, 58790.0], [30.0, 47704.97329376858]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}, {"data": [[28.811475409836063, 46846.3797814208]], "isOverall": false, "label": "CreateRatesAvailability-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 30.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 390.0, "minX": 1.576154749E12, "maxY": 442164.0, "series": [{"data": [[1.576155037E12, 10380.0], [1.576155078E12, 390.0], [1.576155291E12, 8956.0], [1.576155168E12, 8953.0], [1.576155209E12, 390.0], [1.576154775E12, 8836.0], [1.576155201E12, 390.0], [1.576154906E12, 27213.0], [1.576154791E12, 36741.0], [1.576155004E12, 18162.0], [1.576154922E12, 1170.0], [1.57615475E12, 26796.0], [1.576154963E12, 18079.0], [1.576155127E12, 9213.0], [1.576155299E12, 167166.0], [1.576155185E12, 780.0], [1.576155316E12, 45901.0], [1.576154923E12, 390.0], [1.5761548E12, 18600.0], [1.576155267E12, 10284.0], [1.576155324E12, 166909.0], [1.576155242E12, 390.0], [1.576155021E12, 156194.0], [1.576155234E12, 9138.0], [1.576155062E12, 37589.0], [1.576155275E12, 18213.0], [1.576155193E12, 165390.0], [1.576155208E12, 390.0], [1.576155036E12, 9180.0], [1.576155249E12, 9393.0], [1.576154995E12, 17692.0], [1.576154864E12, 780.0], [1.576155077E12, 390.0], [1.576155118E12, 390.0], [1.576154749E12, 8901.0], [1.576154962E12, 10388.0], [1.57615479E12, 10093.0], [1.576155003E12, 39079.0], [1.576154921E12, 780.0], [1.576155298E12, 35919.0], [1.576155126E12, 19040.0], [1.576155216E12, 390.0], [1.576155061E12, 780.0], [1.576155274E12, 8821.0], [1.57615484E12, 9264.0], [1.576155266E12, 9307.0], [1.576154881E12, 17582.0], [1.576155094E12, 780.0], [1.576155323E12, 29631.0], [1.5761552E12, 390.0], [1.57615502E12, 200317.0], [1.576155233E12, 37225.0], [1.576154822E12, 9010.0], [1.576155035E12, 18485.0], [1.576154945E12, 9210.0], [1.576155158E12, 390.0], [1.576154863E12, 156607.0], [1.576155076E12, 780.0], [1.57615492E12, 390.0], [1.576154961E12, 49512.0], [1.576154879E12, 9007.0], [1.576155256E12, 26843.0], [1.576155297E12, 9206.0], [1.576155002E12, 28077.0], [1.576155043E12, 9137.0], [1.576155101E12, 390.0], [1.576155314E12, 390.0], [1.576155142E12, 1170.0], [1.576154839E12, 9270.0], [1.576155183E12, 390.0], [1.576154814E12, 390.0], [1.576154978E12, 18223.0], [1.576155322E12, 9340.0], [1.576154937E12, 18478.0], [1.57615515E12, 18453.0], [1.57615478E12, 9268.0], [1.576155206E12, 780.0], [1.576155296E12, 9134.0], [1.576155124E12, 9329.0], [1.576154903E12, 10519.0], [1.576154821E12, 8918.0], [1.576155247E12, 167218.0], [1.576154862E12, 167155.0], [1.576154878E12, 9081.0], [1.576155255E12, 173761.0], [1.576155083E12, 1950.0], [1.576154788E12, 27376.0], [1.576155214E12, 17856.0], [1.576155313E12, 9005.0], [1.576154805E12, 1560.0], [1.576155018E12, 187615.0], [1.576155059E12, 390.0], [1.576155141E12, 390.0], [1.576154944E12, 27592.0], [1.576154985E12, 27248.0], [1.576154936E12, 8860.0], [1.57615519E12, 9195.0], [1.576154779E12, 8871.0], [1.576155295E12, 390.0], [1.57615491E12, 390.0], [1.576154861E12, 10337.0], [1.576154902E12, 9150.0], [1.576155205E12, 780.0], [1.57615482E12, 8733.0], [1.576155246E12, 9270.0], [1.576154836E12, 9133.0], [1.576155E12, 8635.0], [1.576155213E12, 9468.0], [1.576154959E12, 18403.0], [1.576154845E12, 9147.0], [1.576155099E12, 390.0], [1.576155189E12, 390.0], [1.576154804E12, 1560.0], [1.576155017E12, 9007.0], [1.576154796E12, 17714.0], [1.576155222E12, 390.0], [1.576155312E12, 390.0], [1.576154927E12, 27321.0], [1.576154755E12, 9138.0], [1.576155025E12, 9038.0], [1.57615532E12, 19715.0], [1.576154853E12, 17707.0], [1.576155107E12, 17719.0], [1.576155122E12, 9398.0], [1.576155163E12, 18182.0], [1.57615504E12, 228579.0], [1.576155253E12, 390.0], [1.576155081E12, 8942.0], [1.576155294E12, 28505.0], [1.576155245E12, 9199.0], [1.576154876E12, 17347.0], [1.57615513E12, 167240.0], [1.576154958E12, 9076.0], [1.576155171E12, 9273.0], [1.576155016E12, 9001.0], [1.576154844E12, 93766.0], [1.57615527E12, 9595.0], [1.576154975E12, 155941.0], [1.57615518E12, 780.0], [1.576154795E12, 9025.0], [1.576155311E12, 780.0], [1.576154926E12, 9065.0], [1.576155139E12, 390.0], [1.576154983E12, 28258.0], [1.576155155E12, 390.0], [1.576155319E12, 27320.0], [1.576155147E12, 17939.0], [1.576155024E12, 36655.0], [1.576154852E12, 8897.0], [1.57615508E12, 390.0], [1.576155121E12, 1560.0], [1.576155334E12, 390.0], [1.576155252E12, 9625.0], [1.576154752E12, 8839.0], [1.576154965E12, 359298.0], [1.576155178E12, 390.0], [1.576154793E12, 39860.0], [1.576154957E12, 9005.0], [1.576155211E12, 390.0], [1.576154916E12, 17302.0], [1.576155228E12, 18325.0], [1.576154843E12, 26852.0], [1.576155146E12, 780.0], [1.576154974E12, 8955.0], [1.576155187E12, 390.0], [1.576154925E12, 9032.0], [1.576155138E12, 390.0], [1.576155179E12, 780.0], [1.576154884E12, 9279.0], [1.57615531E12, 390.0], [1.576154941E12, 10329.0], [1.5761549E12, 18188.0], [1.576155064E12, 9197.0], [1.576155236E12, 29974.0], [1.576154851E12, 19634.0], [1.576155079E12, 191162.0], [1.576155292E12, 28394.0], [1.576154997E12, 8880.0], [1.576155251E12, 8859.0], [1.576154776E12, 35930.0], [1.57615512E12, 780.0], [1.576154792E12, 9034.0], [1.576155259E12, 390.0], [1.576154751E12, 27072.0], [1.576154964E12, 191301.0], [1.576155128E12, 10268.0], [1.576155087E12, 18317.0], [1.576155186E12, 390.0], [1.576155317E12, 65115.0], [1.576155096E12, 390.0], [1.576155309E12, 9201.0], [1.576154924E12, 9008.0], [1.576155153E12, 390.0], [1.576154858E12, 9211.0], [1.576154899E12, 36640.0], [1.576155063E12, 9136.0], [1.576154768E12, 8937.0], [1.576154981E12, 390.0], [1.576155194E12, 191340.0], [1.576155235E12, 19585.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.576155037E12, 44225.0], [1.576155078E12, 44209.0], [1.576155291E12, 44208.0], [1.576155168E12, 44213.0], [1.576155209E12, 44226.0], [1.576154775E12, 44200.0], [1.576155201E12, 44231.0], [1.576154906E12, 132650.0], [1.576154791E12, 176914.0], [1.576155004E12, 88459.0], [1.576154922E12, 132635.0], [1.57615475E12, 132643.0], [1.576154963E12, 88431.0], [1.576155127E12, 44232.0], [1.576155299E12, 44216.0], [1.576155185E12, 88429.0], [1.576155316E12, 221107.0], [1.576154923E12, 44195.0], [1.5761548E12, 88465.0], [1.576155267E12, 44211.0], [1.576155324E12, 44227.0], [1.576155242E12, 44227.0], [1.576155021E12, 44212.0], [1.576155234E12, 44220.0], [1.576155062E12, 265290.0], [1.576155275E12, 132655.0], [1.576155193E12, 88417.0], [1.576155208E12, 44209.0], [1.576155036E12, 44215.0], [1.576155249E12, 44228.0], [1.576154995E12, 88415.0], [1.576154864E12, 88449.0], [1.576155077E12, 44205.0], [1.576155118E12, 44231.0], [1.576154749E12, 44203.0], [1.576154962E12, 44212.0], [1.57615479E12, 44197.0], [1.576155003E12, 176902.0], [1.576154921E12, 88422.0], [1.576155298E12, 176885.0], [1.576155126E12, 88454.0], [1.576155216E12, 44226.0], [1.576155061E12, 88436.0], [1.576155274E12, 44220.0], [1.57615484E12, 44220.0], [1.576155266E12, 44199.0], [1.576154881E12, 88428.0], [1.576155094E12, 88438.0], [1.576155323E12, 132655.0], [1.5761552E12, 44210.0], [1.57615502E12, 88438.0], [1.576155233E12, 176887.0], [1.576154822E12, 44213.0], [1.576155035E12, 88429.0], [1.576154945E12, 44207.0], [1.576155158E12, 44218.0], [1.576154863E12, 132667.0], [1.576155076E12, 88423.0], [1.57615492E12, 44236.0], [1.576154961E12, 221113.0], [1.576154879E12, 44228.0], [1.576155256E12, 132646.0], [1.576155297E12, 44233.0], [1.576155002E12, 132689.0], [1.576155043E12, 44221.0], [1.576155101E12, 44204.0], [1.576155314E12, 44209.0], [1.576155142E12, 132650.0], [1.576154839E12, 44209.0], [1.576155183E12, 44198.0], [1.576154814E12, 44220.0], [1.576154978E12, 88470.0], [1.576155322E12, 44231.0], [1.576154937E12, 88445.0], [1.57615515E12, 88429.0], [1.57615478E12, 44225.0], [1.576155206E12, 88424.0], [1.576155296E12, 44214.0], [1.576155124E12, 44225.0], [1.576154903E12, 221080.0], [1.576154821E12, 44223.0], [1.576155247E12, 44212.0], [1.576154862E12, 44224.0], [1.576154878E12, 44214.0], [1.576155255E12, 132667.0], [1.576155083E12, 221091.0], [1.576154788E12, 132653.0], [1.576155214E12, 88444.0], [1.576155313E12, 44204.0], [1.576154805E12, 176852.0], [1.576155018E12, 132641.0], [1.576155059E12, 44222.0], [1.576155141E12, 44213.0], [1.576154944E12, 132642.0], [1.576154985E12, 132656.0], [1.576154936E12, 44221.0], [1.57615519E12, 44199.0], [1.576154779E12, 44203.0], [1.576155295E12, 44211.0], [1.57615491E12, 44226.0], [1.576154861E12, 44201.0], [1.576154902E12, 44227.0], [1.576155205E12, 88407.0], [1.57615482E12, 44224.0], [1.576155246E12, 44235.0], [1.576154836E12, 44203.0], [1.576155E12, 44215.0], [1.576155213E12, 88440.0], [1.576154959E12, 88438.0], [1.576154845E12, 44210.0], [1.576155099E12, 44198.0], [1.576155189E12, 44209.0], [1.576154804E12, 176848.0], [1.576155017E12, 44219.0], [1.576154796E12, 88429.0], [1.576155222E12, 44210.0], [1.576155312E12, 44214.0], [1.576154927E12, 132662.0], [1.576154755E12, 44227.0], [1.576155025E12, 44215.0], [1.57615532E12, 88411.0], [1.576154853E12, 88417.0], [1.576155107E12, 88420.0], [1.576155122E12, 88431.0], [1.576155163E12, 88416.0], [1.57615504E12, 88442.0], [1.576155253E12, 44211.0], [1.576155081E12, 44194.0], [1.576155294E12, 132624.0], [1.576155245E12, 44209.0], [1.576154876E12, 88429.0], [1.57615513E12, 44254.0], [1.576154958E12, 44215.0], [1.576155171E12, 44227.0], [1.576155016E12, 44212.0], [1.576154844E12, 442164.0], [1.57615527E12, 88458.0], [1.576154975E12, 44235.0], [1.57615518E12, 88454.0], [1.576154795E12, 44218.0], [1.576155311E12, 88448.0], [1.576154926E12, 44221.0], [1.576155139E12, 44219.0], [1.576154983E12, 132687.0], [1.576155155E12, 44213.0], [1.576155319E12, 132649.0], [1.576155147E12, 88419.0], [1.576155024E12, 221096.0], [1.576154852E12, 44198.0], [1.57615508E12, 44217.0], [1.576155121E12, 176854.0], [1.576155334E12, 44212.0], [1.576155252E12, 132653.0], [1.576154752E12, 44238.0], [1.576154965E12, 265298.0], [1.576155178E12, 44219.0], [1.576154793E12, 176912.0], [1.576154957E12, 44214.0], [1.576155211E12, 44227.0], [1.576154916E12, 88442.0], [1.576155228E12, 88417.0], [1.576154843E12, 132663.0], [1.576155146E12, 88431.0], [1.576154974E12, 44201.0], [1.576155187E12, 44217.0], [1.576154925E12, 44216.0], [1.576155138E12, 44233.0], [1.576155179E12, 88433.0], [1.576154884E12, 44236.0], [1.57615531E12, 44240.0], [1.576154941E12, 44237.0], [1.5761549E12, 88425.0], [1.576155064E12, 44214.0], [1.576155236E12, 132692.0], [1.576154851E12, 88426.0], [1.576155079E12, 44230.0], [1.576155292E12, 176852.0], [1.576154997E12, 44215.0], [1.576155251E12, 44218.0], [1.576154776E12, 176824.0], [1.57615512E12, 88463.0], [1.576154792E12, 44208.0], [1.576155259E12, 44210.0], [1.576154751E12, 132652.0], [1.576154964E12, 44226.0], [1.576155128E12, 44219.0], [1.576155087E12, 88431.0], [1.576155186E12, 44229.0], [1.576155317E12, 309528.0], [1.576155096E12, 44211.0], [1.576155309E12, 44229.0], [1.576154924E12, 44231.0], [1.576155153E12, 44208.0], [1.576154858E12, 44220.0], [1.576154899E12, 176883.0], [1.576155063E12, 44228.0], [1.576154768E12, 44198.0], [1.576154981E12, 44220.0], [1.576155194E12, 44234.0], [1.576155235E12, 88436.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.576155334E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3158.0, "minX": 1.576154749E12, "maxY": 59283.75, "series": [{"data": [[1.576155037E12, 53996.0], [1.576155078E12, 58794.0], [1.576155291E12, 45047.0], [1.576155168E12, 45078.0], [1.576155209E12, 58778.0], [1.576154775E12, 25766.0], [1.576155201E12, 58795.0], [1.576154906E12, 51689.333333333336], [1.576154791E12, 39902.0], [1.576155004E12, 40515.0], [1.576154922E12, 58781.0], [1.57615475E12, 3505.3333333333335], [1.576154963E12, 38592.0], [1.576155127E12, 45235.0], [1.576155299E12, 52312.0], [1.576155185E12, 58777.5], [1.576155316E12, 40051.4], [1.576154923E12, 58792.0], [1.5761548E12, 39282.0], [1.576155267E12, 53466.0], [1.576155324E12, 25139.0], [1.576155242E12, 58833.0], [1.576155021E12, 45874.0], [1.576155234E12, 27897.0], [1.576155062E12, 58398.16666666667], [1.576155275E12, 45606.666666666664], [1.576155193E12, 52802.0], [1.576155208E12, 58779.0], [1.576155036E12, 40424.0], [1.576155249E12, 43627.0], [1.576154995E12, 43953.0], [1.576154864E12, 58774.0], [1.576155077E12, 58790.0], [1.576155118E12, 58780.0], [1.576154749E12, 3158.0], [1.576154962E12, 42256.0], [1.57615479E12, 44699.0], [1.576155003E12, 37891.75], [1.576154921E12, 58787.5], [1.576155298E12, 39408.0], [1.576155126E12, 46572.5], [1.576155216E12, 58819.0], [1.576155061E12, 58783.0], [1.576155274E12, 28831.0], [1.57615484E12, 51462.0], [1.576155266E12, 33133.0], [1.576154881E12, 36625.0], [1.576155094E12, 58793.5], [1.576155323E12, 27719.666666666668], [1.5761552E12, 58777.0], [1.57615502E12, 55912.0], [1.576155233E12, 51360.5], [1.576154822E12, 42054.0], [1.576155035E12, 51050.5], [1.576154945E12, 38631.0], [1.576155158E12, 58793.0], [1.576154863E12, 58609.0], [1.576155076E12, 58784.0], [1.57615492E12, 58791.0], [1.576154961E12, 55557.4], [1.576154879E12, 35611.0], [1.576155256E12, 30606.666666666668], [1.576155297E12, 41768.0], [1.576155002E12, 41244.666666666664], [1.576155043E12, 40376.0], [1.576155101E12, 58785.0], [1.576155314E12, 58783.0], [1.576155142E12, 58785.333333333336], [1.576154839E12, 46367.0], [1.576155183E12, 58792.0], [1.576154814E12, 58776.0], [1.576154978E12, 38306.0], [1.576155322E12, 27787.0], [1.576154937E12, 45734.5], [1.57615515E12, 35278.0], [1.57615478E12, 29163.0], [1.576155206E12, 58775.5], [1.576155296E12, 47790.0], [1.576155124E12, 45685.0], [1.576154903E12, 58742.0], [1.576154821E12, 42509.0], [1.576155247E12, 58080.0], [1.576154862E12, 57504.0], [1.576154878E12, 38440.0], [1.576155255E12, 41109.333333333336], [1.576155083E12, 58788.4], [1.576154788E12, 42321.333333333336], [1.576155214E12, 37381.5], [1.576155313E12, 39224.0], [1.576154805E12, 59283.75], [1.576155018E12, 55243.666666666664], [1.576155059E12, 58789.0], [1.576155141E12, 58778.0], [1.576154944E12, 42459.333333333336], [1.576154985E12, 38682.333333333336], [1.576154936E12, 57952.0], [1.57615519E12, 48213.0], [1.576154779E12, 28096.0], [1.576155295E12, 58793.0], [1.57615491E12, 58791.0], [1.576154861E12, 55861.0], [1.576154902E12, 48936.0], [1.576155205E12, 58792.5], [1.57615482E12, 43987.0], [1.576155246E12, 38008.0], [1.576154836E12, 45274.0], [1.576155E12, 41557.0], [1.576155213E12, 54643.5], [1.576154959E12, 55633.0], [1.576154845E12, 53044.0], [1.576155099E12, 58778.0], [1.576155189E12, 58786.0], [1.576154804E12, 58940.0], [1.576155017E12, 38596.0], [1.576154796E12, 20074.5], [1.576155222E12, 58814.0], [1.576155312E12, 58791.0], [1.576154927E12, 33688.0], [1.576154755E12, 8471.0], [1.576155025E12, 39099.0], [1.57615532E12, 28506.0], [1.576154853E12, 42292.0], [1.576155107E12, 45464.5], [1.576155122E12, 58655.0], [1.576155163E12, 50664.0], [1.57615504E12, 51120.5], [1.576155253E12, 58800.0], [1.576155081E12, 57144.0], [1.576155294E12, 50925.333333333336], [1.576155245E12, 36660.0], [1.576154876E12, 38667.0], [1.57615513E12, 52762.0], [1.576154958E12, 41467.0], [1.576155171E12, 49991.0], [1.576155016E12, 50613.0], [1.576154844E12, 48043.399999999994], [1.57615527E12, 53420.0], [1.576154975E12, 53771.0], [1.57615518E12, 58780.0], [1.576154795E12, 19967.0], [1.576155311E12, 58791.0], [1.576154926E12, 45372.0], [1.576155139E12, 58784.0], [1.576154983E12, 42145.0], [1.576155155E12, 58808.0], [1.576155319E12, 20962.333333333332], [1.576155147E12, 49437.5], [1.576155024E12, 42874.2], [1.576154852E12, 47041.0], [1.57615508E12, 58794.0], [1.576155121E12, 58797.25], [1.576155334E12, 58782.0], [1.576155252E12, 54616.666666666664], [1.576154752E12, 6073.0], [1.576154965E12, 40781.0], [1.576155178E12, 58801.0], [1.576154793E12, 45732.5], [1.576154957E12, 41301.0], [1.576155211E12, 58786.0], [1.576154916E12, 39826.0], [1.576155228E12, 50292.5], [1.576154843E12, 53723.0], [1.576155146E12, 58807.0], [1.576154974E12, 46900.0], [1.576155187E12, 58777.0], [1.576154925E12, 25300.0], [1.576155138E12, 58804.0], [1.576155179E12, 58769.5], [1.576154884E12, 40271.0], [1.57615531E12, 58790.0], [1.576154941E12, 42205.0], [1.5761549E12, 56793.0], [1.576155064E12, 46982.0], [1.576155236E12, 45932.333333333336], [1.576154851E12, 44710.0], [1.576155079E12, 58993.0], [1.576155292E12, 57999.25], [1.576154997E12, 34206.0], [1.576155251E12, 37895.0], [1.576154776E12, 25687.75], [1.57615512E12, 58790.5], [1.576154792E12, 45306.0], [1.576155259E12, 58774.0], [1.576154751E12, 4383.0], [1.576154964E12, 41684.0], [1.576155128E12, 51983.0], [1.576155087E12, 49806.5], [1.576155186E12, 58793.0], [1.576155317E12, 31572.285714285714], [1.576155096E12, 58797.0], [1.576155309E12, 53240.0], [1.576154924E12, 44379.0], [1.576155153E12, 58793.0], [1.576154858E12, 35706.0], [1.576154899E12, 53523.5], [1.576155063E12, 46812.0], [1.576154768E12, 21260.0], [1.576154981E12, 58798.0], [1.576155194E12, 56143.0], [1.576155235E12, 52336.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.576155334E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3158.0, "minX": 1.576154749E12, "maxY": 59283.75, "series": [{"data": [[1.576155037E12, 53996.0], [1.576155078E12, 58794.0], [1.576155291E12, 45047.0], [1.576155168E12, 45078.0], [1.576155209E12, 58778.0], [1.576154775E12, 25766.0], [1.576155201E12, 58795.0], [1.576154906E12, 51689.333333333336], [1.576154791E12, 39902.0], [1.576155004E12, 40515.0], [1.576154922E12, 58781.0], [1.57615475E12, 3505.3333333333335], [1.576154963E12, 38592.0], [1.576155127E12, 45235.0], [1.576155299E12, 51154.0], [1.576155185E12, 58777.5], [1.576155316E12, 40051.4], [1.576154923E12, 58792.0], [1.5761548E12, 39282.0], [1.576155267E12, 53466.0], [1.576155324E12, 24750.0], [1.576155242E12, 58833.0], [1.576155021E12, 45488.0], [1.576155234E12, 27897.0], [1.576155062E12, 58398.16666666667], [1.576155275E12, 45606.666666666664], [1.576155193E12, 52607.5], [1.576155208E12, 58779.0], [1.576155036E12, 40423.0], [1.576155249E12, 43627.0], [1.576154995E12, 43953.0], [1.576154864E12, 58774.0], [1.576155077E12, 58790.0], [1.576155118E12, 58780.0], [1.576154749E12, 3158.0], [1.576154962E12, 42256.0], [1.57615479E12, 44699.0], [1.576155003E12, 37891.75], [1.576154921E12, 58787.5], [1.576155298E12, 39408.0], [1.576155126E12, 46572.5], [1.576155216E12, 58819.0], [1.576155061E12, 58783.0], [1.576155274E12, 28831.0], [1.57615484E12, 51462.0], [1.576155266E12, 33133.0], [1.576154881E12, 36625.0], [1.576155094E12, 58793.5], [1.576155323E12, 27719.666666666668], [1.5761552E12, 58777.0], [1.57615502E12, 55660.0], [1.576155233E12, 51360.5], [1.576154822E12, 42054.0], [1.576155035E12, 51050.5], [1.576154945E12, 38631.0], [1.576155158E12, 58793.0], [1.576154863E12, 58482.0], [1.576155076E12, 58784.0], [1.57615492E12, 58791.0], [1.576154961E12, 55557.4], [1.576154879E12, 35611.0], [1.576155256E12, 30606.666666666668], [1.576155297E12, 41768.0], [1.576155002E12, 41244.666666666664], [1.576155043E12, 40376.0], [1.576155101E12, 58785.0], [1.576155314E12, 58783.0], [1.576155142E12, 58785.333333333336], [1.576154839E12, 46367.0], [1.576155183E12, 58792.0], [1.576154814E12, 58776.0], [1.576154978E12, 38306.0], [1.576155322E12, 27787.0], [1.576154937E12, 45734.5], [1.57615515E12, 35278.0], [1.57615478E12, 29163.0], [1.576155206E12, 58775.5], [1.576155296E12, 47790.0], [1.576155124E12, 45685.0], [1.576154903E12, 58742.0], [1.576154821E12, 42509.0], [1.576155247E12, 56939.0], [1.576154862E12, 57111.0], [1.576154878E12, 38440.0], [1.576155255E12, 40982.0], [1.576155083E12, 58788.4], [1.576154788E12, 42321.333333333336], [1.576155214E12, 37381.5], [1.576155313E12, 39224.0], [1.576154805E12, 59283.75], [1.576155018E12, 55114.666666666664], [1.576155059E12, 58789.0], [1.576155141E12, 58778.0], [1.576154944E12, 42459.333333333336], [1.576154985E12, 38682.333333333336], [1.576154936E12, 57952.0], [1.57615519E12, 48213.0], [1.576154779E12, 28096.0], [1.576155295E12, 58793.0], [1.57615491E12, 58791.0], [1.576154861E12, 55861.0], [1.576154902E12, 48936.0], [1.576155205E12, 58792.5], [1.57615482E12, 43987.0], [1.576155246E12, 38008.0], [1.576154836E12, 45274.0], [1.576155E12, 41557.0], [1.576155213E12, 54643.5], [1.576154959E12, 55632.5], [1.576154845E12, 53044.0], [1.576155099E12, 58778.0], [1.576155189E12, 58786.0], [1.576154804E12, 58940.0], [1.576155017E12, 38596.0], [1.576154796E12, 20074.5], [1.576155222E12, 58814.0], [1.576155312E12, 58791.0], [1.576154927E12, 33688.0], [1.576154755E12, 8471.0], [1.576155025E12, 39099.0], [1.57615532E12, 28506.0], [1.576154853E12, 42292.0], [1.576155107E12, 45464.5], [1.576155122E12, 58655.0], [1.576155163E12, 50664.0], [1.57615504E12, 50862.5], [1.576155253E12, 58800.0], [1.576155081E12, 57144.0], [1.576155294E12, 50925.333333333336], [1.576155245E12, 36660.0], [1.576154876E12, 38666.5], [1.57615513E12, 51620.0], [1.576154958E12, 41467.0], [1.576155171E12, 49991.0], [1.576155016E12, 50613.0], [1.576154844E12, 48043.299999999996], [1.57615527E12, 53420.0], [1.576154975E12, 53382.0], [1.57615518E12, 58780.0], [1.576154795E12, 19967.0], [1.576155311E12, 58791.0], [1.576154926E12, 45372.0], [1.576155139E12, 58784.0], [1.576154983E12, 42145.0], [1.576155155E12, 58808.0], [1.576155319E12, 20962.333333333332], [1.576155147E12, 49437.0], [1.576155024E12, 42874.2], [1.576154852E12, 47040.0], [1.57615508E12, 58794.0], [1.576155121E12, 58797.25], [1.576155334E12, 58782.0], [1.576155252E12, 54616.666666666664], [1.576154752E12, 6073.0], [1.576154965E12, 40650.5], [1.576155178E12, 58801.0], [1.576154793E12, 45732.5], [1.576154957E12, 41301.0], [1.576155211E12, 58786.0], [1.576154916E12, 39826.0], [1.576155228E12, 50292.5], [1.576154843E12, 53722.666666666664], [1.576155146E12, 58807.0], [1.576154974E12, 46900.0], [1.576155187E12, 58777.0], [1.576154925E12, 25300.0], [1.576155138E12, 58804.0], [1.576155179E12, 58769.5], [1.576154884E12, 40271.0], [1.57615531E12, 58790.0], [1.576154941E12, 42205.0], [1.5761549E12, 56793.0], [1.576155064E12, 46982.0], [1.576155236E12, 45932.0], [1.576154851E12, 44710.0], [1.576155079E12, 58478.0], [1.576155292E12, 57999.25], [1.576154997E12, 34206.0], [1.576155251E12, 37895.0], [1.576154776E12, 25687.75], [1.57615512E12, 58790.5], [1.576154792E12, 45306.0], [1.576155259E12, 58774.0], [1.576154751E12, 4383.0], [1.576154964E12, 40371.0], [1.576155128E12, 51983.0], [1.576155087E12, 49806.5], [1.576155186E12, 58793.0], [1.576155317E12, 31572.285714285714], [1.576155096E12, 58797.0], [1.576155309E12, 53240.0], [1.576154924E12, 44379.0], [1.576155153E12, 58793.0], [1.576154858E12, 35706.0], [1.576154899E12, 53523.5], [1.576155063E12, 46812.0], [1.576154768E12, 21260.0], [1.576154981E12, 58798.0], [1.576155194E12, 54761.0], [1.576155235E12, 52336.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.576155334E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 384.0, "minX": 1.576154749E12, "maxY": 1399.0, "series": [{"data": [[1.576155037E12, 402.0], [1.576155078E12, 398.0], [1.576155291E12, 409.0], [1.576155168E12, 392.0], [1.576155209E12, 399.0], [1.576154775E12, 399.0], [1.576155201E12, 415.0], [1.576154906E12, 389.6666666666667], [1.576154791E12, 438.0], [1.576155004E12, 406.0], [1.576154922E12, 393.0], [1.57615475E12, 451.0], [1.576154963E12, 404.0], [1.576155127E12, 392.0], [1.576155299E12, 410.0], [1.576155185E12, 398.0], [1.576155316E12, 401.2], [1.576154923E12, 405.0], [1.5761548E12, 670.5], [1.576155267E12, 413.0], [1.576155324E12, 386.0], [1.576155242E12, 425.0], [1.576155021E12, 397.0], [1.576155234E12, 387.0], [1.576155062E12, 393.5], [1.576155275E12, 394.6666666666667], [1.576155193E12, 399.0], [1.576155208E12, 394.0], [1.576155036E12, 396.0], [1.576155249E12, 400.0], [1.576154995E12, 402.5], [1.576154864E12, 391.5], [1.576155077E12, 409.0], [1.576155118E12, 392.0], [1.576154749E12, 483.0], [1.576154962E12, 394.0], [1.57615479E12, 522.0], [1.576155003E12, 402.5], [1.576154921E12, 404.5], [1.576155298E12, 400.0], [1.576155126E12, 403.5], [1.576155216E12, 411.0], [1.576155061E12, 405.5], [1.576155274E12, 399.0], [1.57615484E12, 397.0], [1.576155266E12, 420.0], [1.576154881E12, 411.0], [1.576155094E12, 397.5], [1.576155323E12, 406.0], [1.5761552E12, 385.0], [1.57615502E12, 404.5], [1.576155233E12, 397.0], [1.576154822E12, 411.0], [1.576155035E12, 398.5], [1.576154945E12, 399.0], [1.576155158E12, 406.0], [1.576154863E12, 402.6666666666667], [1.576155076E12, 393.0], [1.57615492E12, 398.0], [1.576154961E12, 397.8], [1.576154879E12, 413.0], [1.576155256E12, 390.6666666666667], [1.576155297E12, 402.0], [1.576155002E12, 401.3333333333333], [1.576155043E12, 394.0], [1.576155101E12, 402.0], [1.576155314E12, 395.0], [1.576155142E12, 391.3333333333333], [1.576154839E12, 390.0], [1.576155183E12, 397.0], [1.576154814E12, 394.0], [1.576154978E12, 401.0], [1.576155322E12, 402.0], [1.576154937E12, 393.0], [1.57615515E12, 401.0], [1.57615478E12, 401.0], [1.576155206E12, 387.0], [1.576155296E12, 398.0], [1.576155124E12, 416.0], [1.576154903E12, 403.8], [1.576154821E12, 414.0], [1.576155247E12, 407.0], [1.576154862E12, 402.0], [1.576154878E12, 406.0], [1.576155255E12, 403.3333333333333], [1.576155083E12, 402.6], [1.576154788E12, 644.6666666666666], [1.576155214E12, 402.5], [1.576155313E12, 424.0], [1.576154805E12, 593.0], [1.576155018E12, 399.3333333333333], [1.576155059E12, 401.0], [1.576155141E12, 396.0], [1.576154944E12, 399.0], [1.576154985E12, 403.6666666666667], [1.576154936E12, 399.0], [1.57615519E12, 426.0], [1.576154779E12, 407.0], [1.576155295E12, 409.0], [1.57615491E12, 395.0], [1.576154861E12, 398.0], [1.576154902E12, 393.0], [1.576155205E12, 401.0], [1.57615482E12, 400.0], [1.576155246E12, 407.0], [1.576154836E12, 395.0], [1.576155E12, 404.0], [1.576155213E12, 395.5], [1.576154959E12, 402.0], [1.576154845E12, 390.0], [1.576155099E12, 398.0], [1.576155189E12, 391.0], [1.576154804E12, 472.5], [1.576155017E12, 390.0], [1.576154796E12, 401.0], [1.576155222E12, 406.0], [1.576155312E12, 400.0], [1.576154927E12, 402.0], [1.576154755E12, 1388.0], [1.576155025E12, 407.0], [1.57615532E12, 391.5], [1.576154853E12, 410.5], [1.576155107E12, 398.5], [1.576155122E12, 399.0], [1.576155163E12, 388.5], [1.57615504E12, 407.5], [1.576155253E12, 410.0], [1.576155081E12, 411.0], [1.576155294E12, 399.3333333333333], [1.576155245E12, 385.0], [1.576154876E12, 398.5], [1.57615513E12, 399.0], [1.576154958E12, 401.0], [1.576155171E12, 391.0], [1.576155016E12, 389.0], [1.576154844E12, 397.0], [1.57615527E12, 403.5], [1.576154975E12, 394.0], [1.57615518E12, 392.5], [1.576154795E12, 395.0], [1.576155311E12, 403.5], [1.576154926E12, 390.0], [1.576155139E12, 397.0], [1.576154983E12, 398.0], [1.576155155E12, 404.0], [1.576155319E12, 406.3333333333333], [1.576155147E12, 396.5], [1.576155024E12, 402.4], [1.576154852E12, 390.0], [1.57615508E12, 392.0], [1.576155121E12, 408.0], [1.576155334E12, 385.0], [1.576155252E12, 405.3333333333333], [1.576154752E12, 441.0], [1.576154965E12, 393.8333333333333], [1.576155178E12, 402.0], [1.576154793E12, 489.75], [1.576154957E12, 390.0], [1.576155211E12, 394.0], [1.576154916E12, 439.5], [1.576155228E12, 392.0], [1.576154843E12, 396.6666666666667], [1.576155146E12, 411.5], [1.576154974E12, 403.0], [1.576155187E12, 392.0], [1.576154925E12, 401.0], [1.576155138E12, 413.0], [1.576155179E12, 387.5], [1.576154884E12, 422.0], [1.57615531E12, 404.0], [1.576154941E12, 403.0], [1.5761549E12, 397.0], [1.576155064E12, 402.0], [1.576155236E12, 398.0], [1.576154851E12, 400.0], [1.576155079E12, 384.0], [1.576155292E12, 401.75], [1.576154997E12, 398.0], [1.576155251E12, 393.0], [1.576154776E12, 397.5], [1.57615512E12, 406.5], [1.576154792E12, 532.0], [1.576155259E12, 392.0], [1.576154751E12, 434.0], [1.576154964E12, 423.0], [1.576155128E12, 399.0], [1.576155087E12, 398.0], [1.576155186E12, 402.0], [1.576155317E12, 395.2857142857143], [1.576155096E12, 411.0], [1.576155309E12, 430.0], [1.576154924E12, 398.0], [1.576155153E12, 392.0], [1.576154858E12, 408.0], [1.576154899E12, 403.5], [1.576155063E12, 398.0], [1.576154768E12, 1399.0], [1.576154981E12, 401.0], [1.576155194E12, 406.0], [1.576155235E12, 392.0]], "isOverall": false, "label": "CreateRatesAvailability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.576155334E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3158.0, "minX": 1.576154749E12, "maxY": 59339.0, "series": [{"data": [[1.576155037E12, 53996.0], [1.576154779E12, 28096.0], [1.576155291E12, 45047.0], [1.576155168E12, 45078.0], [1.576154861E12, 55861.0], [1.576154775E12, 25766.0], [1.576154902E12, 48936.0], [1.576154906E12, 53626.0], [1.57615482E12, 43987.0], [1.576155246E12, 38008.0], [1.576154791E12, 45650.0], [1.576155004E12, 42159.0], [1.576154836E12, 45274.0], [1.57615475E12, 3864.0], [1.576154963E12, 39026.0], [1.576155E12, 41557.0], [1.576155213E12, 50501.0], [1.576155127E12, 45235.0], [1.576154959E12, 55654.0], [1.576155299E12, 52312.0], [1.576154845E12, 53044.0], [1.576155017E12, 38596.0], [1.576155316E12, 57047.0], [1.576154796E12, 20083.0], [1.5761548E12, 54124.0], [1.576154927E12, 46147.0], [1.576154755E12, 8471.0], [1.576155267E12, 53466.0], [1.576155025E12, 39099.0], [1.576155324E12, 25139.0], [1.576155021E12, 45874.0], [1.57615532E12, 28703.0], [1.576155234E12, 27897.0], [1.576155062E12, 58568.0], [1.576155275E12, 39737.0], [1.576154853E12, 52816.0], [1.576155193E12, 54445.0], [1.576155107E12, 45549.0], [1.576155122E12, 58532.0], [1.576155036E12, 40424.0], [1.576155249E12, 43627.0], [1.576155163E12, 55715.0], [1.57615504E12, 59339.0], [1.576155081E12, 57144.0], [1.576154995E12, 50733.0], [1.576155294E12, 57849.0], [1.576155245E12, 36660.0], [1.576154749E12, 3158.0], [1.576154962E12, 42256.0], [1.576154876E12, 40186.0], [1.57615479E12, 44699.0], [1.576155003E12, 42099.0], [1.576155298E12, 42627.0], [1.576155126E12, 49994.0], [1.57615513E12, 52762.0], [1.576154958E12, 41467.0], [1.576155171E12, 49991.0], [1.576155016E12, 50613.0], [1.576154844E12, 53802.0], [1.57615527E12, 48039.0], [1.576154975E12, 53771.0], [1.576155274E12, 28831.0], [1.57615484E12, 51462.0], [1.576155266E12, 33133.0], [1.576154881E12, 36802.0], [1.576154795E12, 19967.0], [1.576154926E12, 45372.0], [1.576154983E12, 45585.0], [1.576155323E12, 28672.0], [1.576155319E12, 21295.0], [1.57615502E12, 56658.0], [1.576155233E12, 55022.0], [1.576155147E12, 53306.0], [1.576155024E12, 45844.0], [1.576154852E12, 47041.0], [1.576154822E12, 42054.0], [1.576155035E12, 52164.0], [1.576155252E12, 46249.0], [1.576154945E12, 38631.0], [1.576154863E12, 58250.0], [1.576154961E12, 58235.0], [1.576154752E12, 6073.0], [1.576154965E12, 44448.0], [1.576154879E12, 35611.0], [1.576154793E12, 47705.0], [1.576154957E12, 41301.0], [1.576155256E12, 41820.0], [1.576155297E12, 41768.0], [1.576155002E12, 43534.0], [1.576154916E12, 39856.0], [1.576155043E12, 40376.0], [1.576155228E12, 57502.0], [1.576154843E12, 55076.0], [1.576154974E12, 46900.0], [1.576154925E12, 25300.0], [1.576154839E12, 46367.0], [1.576154884E12, 40271.0], [1.576154941E12, 42205.0], [1.5761549E12, 57211.0], [1.576155064E12, 46982.0], [1.576154978E12, 42318.0], [1.576155322E12, 27787.0], [1.576154937E12, 53609.0], [1.576155236E12, 55933.0], [1.576154851E12, 57942.0], [1.57615515E12, 42544.0], [1.576155079E12, 58993.0], [1.57615478E12, 29163.0], [1.576155292E12, 58491.0], [1.576154997E12, 34206.0], [1.576155296E12, 47790.0], [1.576155124E12, 45685.0], [1.576155251E12, 37895.0], [1.576154776E12, 26110.0], [1.576154903E12, 58559.0], [1.576154821E12, 42509.0], [1.576155247E12, 58080.0], [1.576154862E12, 57504.0], [1.576154792E12, 45306.0], [1.576154751E12, 4475.0], [1.576154964E12, 41684.0], [1.576154878E12, 38440.0], [1.576155128E12, 51983.0], [1.576155255E12, 54963.0], [1.576155087E12, 51885.0], [1.576154788E12, 42437.0], [1.576155214E12, 46499.0], [1.576155313E12, 39224.0], [1.576155317E12, 46494.0], [1.576155018E12, 56984.0], [1.576155309E12, 53240.0], [1.576154924E12, 44379.0], [1.576154944E12, 44452.0], [1.576154858E12, 35706.0], [1.576154985E12, 47547.0], [1.576154899E12, 55721.0], [1.576154936E12, 57952.0], [1.576155063E12, 46812.0], [1.57615519E12, 48213.0], [1.576154768E12, 21260.0], [1.576155194E12, 56143.0], [1.576155235E12, 56599.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.576155037E12, 53996.0], [1.576154779E12, 28096.0], [1.576155291E12, 45047.0], [1.576155168E12, 45078.0], [1.576154861E12, 55861.0], [1.576154775E12, 25766.0], [1.576154902E12, 48936.0], [1.576154906E12, 48154.0], [1.57615482E12, 43987.0], [1.576155246E12, 38008.0], [1.576154791E12, 23370.0], [1.576155004E12, 38871.0], [1.576154836E12, 45274.0], [1.57615475E12, 3213.0], [1.576154963E12, 38158.0], [1.576155E12, 41557.0], [1.576155213E12, 50501.0], [1.576155127E12, 45235.0], [1.576154959E12, 55612.0], [1.576155299E12, 52312.0], [1.576154845E12, 53044.0], [1.576155017E12, 38596.0], [1.576155316E12, 22715.0], [1.576154796E12, 20066.0], [1.5761548E12, 24440.0], [1.576154927E12, 27264.0], [1.576154755E12, 8471.0], [1.576155267E12, 53466.0], [1.576155025E12, 39099.0], [1.576155324E12, 25139.0], [1.576155021E12, 45874.0], [1.57615532E12, 28309.0], [1.576155234E12, 27897.0], [1.576155062E12, 57772.0], [1.576155275E12, 38304.0], [1.576154853E12, 31768.0], [1.576155193E12, 51159.0], [1.576155107E12, 45380.0], [1.576155122E12, 58532.0], [1.576155036E12, 40424.0], [1.576155249E12, 43627.0], [1.576155163E12, 45613.0], [1.57615504E12, 42902.0], [1.576155081E12, 57144.0], [1.576154995E12, 37173.0], [1.576155294E12, 42281.0], [1.576155245E12, 36660.0], [1.576154749E12, 3158.0], [1.576154962E12, 42256.0], [1.576154876E12, 37148.0], [1.57615479E12, 44699.0], [1.576155003E12, 29262.0], [1.576155298E12, 31399.0], [1.576155126E12, 43151.0], [1.57615513E12, 52762.0], [1.576154958E12, 41467.0], [1.576155171E12, 49991.0], [1.576155016E12, 50613.0], [1.576154844E12, 30404.0], [1.57615527E12, 48039.0], [1.576154975E12, 53771.0], [1.576155274E12, 28831.0], [1.57615484E12, 51462.0], [1.576155266E12, 33133.0], [1.576154881E12, 36448.0], [1.576154795E12, 19967.0], [1.576154926E12, 45372.0], [1.576154983E12, 39418.0], [1.576155323E12, 26558.0], [1.576155319E12, 20614.0], [1.57615502E12, 55166.0], [1.576155233E12, 43001.0], [1.576155147E12, 45569.0], [1.576155024E12, 29508.0], [1.576154852E12, 47041.0], [1.576154822E12, 42054.0], [1.576155035E12, 49937.0], [1.576155252E12, 46249.0], [1.576154945E12, 38631.0], [1.576154863E12, 58250.0], [1.576154961E12, 51356.0], [1.576154752E12, 6073.0], [1.576154965E12, 38348.0], [1.576154879E12, 35611.0], [1.576154793E12, 40264.0], [1.576154957E12, 41301.0], [1.576155256E12, 22420.0], [1.576155297E12, 41768.0], [1.576155002E12, 39440.0], [1.576154916E12, 39796.0], [1.576155043E12, 40376.0], [1.576155228E12, 43083.0], [1.576154843E12, 51902.0], [1.576154974E12, 46900.0], [1.576154925E12, 25300.0], [1.576154839E12, 46367.0], [1.576154884E12, 40271.0], [1.576154941E12, 42205.0], [1.5761549E12, 56375.0], [1.576155064E12, 46982.0], [1.576154978E12, 34294.0], [1.576155322E12, 27787.0], [1.576154937E12, 37860.0], [1.576155236E12, 31116.0], [1.576154851E12, 31478.0], [1.57615515E12, 28012.0], [1.576155079E12, 58993.0], [1.57615478E12, 29163.0], [1.576155292E12, 56509.0], [1.576154997E12, 34206.0], [1.576155296E12, 47790.0], [1.576155124E12, 45685.0], [1.576155251E12, 37895.0], [1.576154776E12, 25268.0], [1.576154903E12, 58559.0], [1.576154821E12, 42509.0], [1.576155247E12, 58080.0], [1.576154862E12, 57504.0], [1.576154792E12, 45306.0], [1.576154751E12, 4270.0], [1.576154964E12, 41684.0], [1.576154878E12, 38440.0], [1.576155128E12, 51983.0], [1.576155255E12, 26817.0], [1.576155087E12, 47728.0], [1.576154788E12, 42185.0], [1.576155214E12, 28264.0], [1.576155313E12, 39224.0], [1.576155317E12, 19448.0], [1.576155018E12, 53099.0], [1.576155309E12, 53240.0], [1.576154924E12, 44379.0], [1.576154944E12, 41106.0], [1.576154858E12, 35706.0], [1.576154985E12, 27944.0], [1.576154899E12, 48005.0], [1.576154936E12, 57952.0], [1.576155063E12, 46812.0], [1.57615519E12, 48213.0], [1.576154768E12, 21260.0], [1.576155194E12, 56143.0], [1.576155235E12, 48073.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.576155037E12, 55619.2], [1.576154779E12, 26705.800000000003], [1.576155291E12, 56235.8], [1.576155168E12, 56459.9], [1.576154861E12, 53574.600000000006], [1.576154775E12, 24864.800000000003], [1.576154902E12, 55368.200000000004], [1.576154906E12, 55603.4], [1.57615482E12, 47418.700000000004], [1.576155246E12, 56397.4], [1.576154791E12, 45290.6], [1.576155004E12, 55320.2], [1.576154836E12, 47326.0], [1.57615475E12, 3864.0], [1.576154963E12, 55714.3], [1.576155E12, 55555.4], [1.576155213E12, 56305.4], [1.576155127E12, 56723.200000000004], [1.576154959E12, 55641.4], [1.576155299E12, 56604.9], [1.576154845E12, 52814.8], [1.576155017E12, 55302.6], [1.576155316E12, 56622.6], [1.576154796E12, 46655.600000000006], [1.5761548E12, 47449.6], [1.576154927E12, 55303.700000000004], [1.576154755E12, 8471.0], [1.576155267E12, 56351.8], [1.576155025E12, 55633.6], [1.576155324E12, 56468.8], [1.576155021E12, 55648.6], [1.57615532E12, 56527.0], [1.576155234E12, 56328.600000000006], [1.576155062E12, 56118.0], [1.576155275E12, 56259.0], [1.576154853E12, 53021.2], [1.576155193E12, 56323.600000000006], [1.576155107E12, 56573.100000000006], [1.576155122E12, 56853.6], [1.576155036E12, 55622.8], [1.576155249E12, 56576.6], [1.576155163E12, 56488.200000000004], [1.57615504E12, 55648.0], [1.576155081E12, 56690.6], [1.576154995E12, 55612.0], [1.576155294E12, 56646.2], [1.576155245E12, 56419.8], [1.576154749E12, 3158.0], [1.576154962E12, 55735.0], [1.576154876E12, 54144.1], [1.57615479E12, 42418.0], [1.576155003E12, 55357.3], [1.576155298E12, 56610.8], [1.576155126E12, 56755.8], [1.57615513E12, 56658.0], [1.576154958E12, 55303.700000000004], [1.576155171E12, 56431.600000000006], [1.576155016E12, 55311.4], [1.576154844E12, 52650.0], [1.57615527E12, 56328.600000000006], [1.576154975E12, 55654.0], [1.576155274E12, 56305.4], [1.57615484E12, 47573.200000000004], [1.576155266E12, 56375.0], [1.576154881E12, 54091.8], [1.576154795E12, 46990.8], [1.576154926E12, 55407.4], [1.576154983E12, 55633.0], [1.576155323E12, 56482.200000000004], [1.576155319E12, 56545.0], [1.57615502E12, 55649.2], [1.576155233E12, 56351.8], [1.576155147E12, 56601.4], [1.576155024E12, 55637.2], [1.576154852E12, 53119.8], [1.576154822E12, 47356.9], [1.576155035E12, 55626.4], [1.576155252E12, 56531.8], [1.576154945E12, 55368.200000000004], [1.576154863E12, 54157.5], [1.576154961E12, 55749.0], [1.576154752E12, 6073.0], [1.576154965E12, 55667.4], [1.576154879E12, 54130.7], [1.576154793E12, 47158.4], [1.576154957E12, 55329.0], [1.576155256E12, 56397.4], [1.576155297E12, 56634.4], [1.576155002E12, 55470.5], [1.576154916E12, 55525.0], [1.576155043E12, 55644.4], [1.576155228E12, 56459.9], [1.576154843E12, 51682.0], [1.576154974E12, 55660.7], [1.576154925E12, 55446.6], [1.576154839E12, 47230.1], [1.576154884E12, 54059.6], [1.576154941E12, 55525.0], [1.5761549E12, 55407.4], [1.576155064E12, 56015.200000000004], [1.576154978E12, 55645.6], [1.576155322E12, 56518.0], [1.576154937E12, 55564.200000000004], [1.576155236E12, 56442.200000000004], [1.576154851E12, 53195.6], [1.57615515E12, 56544.799999999996], [1.576155079E12, 56431.600000000006], [1.57615478E12, 28309.399999999998], [1.576155292E12, 56604.9], [1.576154997E12, 55583.700000000004], [1.576155296E12, 56640.3], [1.576155124E12, 56821.0], [1.576155251E12, 56554.200000000004], [1.576154776E12, 25903.6], [1.576154903E12, 55721.0], [1.576154821E12, 47387.8], [1.576155247E12, 56599.0], [1.576154862E12, 53995.2], [1.576154792E12, 45307.5], [1.576154751E12, 4475.0], [1.576154964E12, 55707.6], [1.576154878E12, 54137.4], [1.576155128E12, 56690.6], [1.576155255E12, 56464.6], [1.576155087E12, 56629.700000000004], [1.576154788E12, 42326.3], [1.576155214E12, 56259.0], [1.576155313E12, 56590.0], [1.576155317E12, 56572.0], [1.576155018E12, 55626.4], [1.576155309E12, 56599.0], [1.576154924E12, 55485.8], [1.576154944E12, 55407.4], [1.576154858E12, 52998.4], [1.576154985E12, 55620.4], [1.576154899E12, 55053.8], [1.576154936E12, 55642.6], [1.576155063E12, 56066.600000000006], [1.57615519E12, 56403.299999999996], [1.576154768E12, 19981.100000000006], [1.576155194E12, 56328.600000000006], [1.576155235E12, 56509.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.576155037E12, 58379.78], [1.576154779E12, 28096.0], [1.576155291E12, 58882.50000000001], [1.576155168E12, 59037.979999999996], [1.576154861E12, 57942.0], [1.576154775E12, 25766.0], [1.576154902E12, 58250.0], [1.576154906E12, 58559.0], [1.57615482E12, 54124.0], [1.576155246E12, 58954.75], [1.576154791E12, 45650.0], [1.576155004E12, 58432.31], [1.576154836E12, 54124.0], [1.57615475E12, 3864.0], [1.576154963E12, 58525.01], [1.576155E12, 58460.12], [1.576155213E12, 59017.22], [1.576155127E12, 59069.12], [1.576154959E12, 58549.73], [1.576155299E12, 58827.24999999999], [1.576154845E12, 55076.0], [1.576155017E12, 58426.13], [1.576155316E12, 58797.5], [1.576154796E12, 47705.0], [1.5761548E12, 54124.0], [1.576154927E12, 58559.0], [1.576154755E12, 8471.0], [1.576155267E12, 58903.75], [1.576155025E12, 58392.14], [1.576155324E12, 58725.25], [1.576155021E12, 58407.59], [1.57615532E12, 58746.49999999999], [1.576155234E12, 58984.49999999999], [1.576155062E12, 58837.85], [1.576155275E12, 58886.75], [1.576154853E12, 57942.0], [1.576155193E12, 59024.14], [1.576155107E12, 59086.420000000006], [1.576155122E12, 59082.96], [1.576155036E12, 58382.87], [1.576155249E12, 58946.24999999999], [1.576155163E12, 59041.439999999995], [1.57615504E12, 58871.00000000001], [1.576155081E12, 59100.26], [1.576154995E12, 58466.299999999996], [1.576155294E12, 58857.0], [1.576155245E12, 58958.99999999999], [1.576154749E12, 3158.0], [1.576154962E12, 58531.19], [1.576154876E12, 58250.0], [1.57615479E12, 44699.0], [1.576155003E12, 58438.49], [1.576155298E12, 58831.5], [1.576155126E12, 59072.579999999994], [1.57615513E12, 59062.2], [1.576154958E12, 58555.909999999996], [1.576155171E12, 59034.520000000004], [1.576155016E12, 58429.22], [1.576154844E12, 55076.0], [1.57615527E12, 58899.5], [1.576154975E12, 58497.2], [1.576155274E12, 58895.25000000001], [1.57615484E12, 54124.0], [1.576155266E12, 58908.00000000001], [1.576154881E12, 58250.0], [1.576154795E12, 47705.0], [1.576154926E12, 58559.0], [1.576154983E12, 58481.75], [1.576155323E12, 58729.5], [1.576155319E12, 58755.0], [1.57615502E12, 58410.68], [1.576155233E12, 58988.75000000001], [1.576155147E12, 59055.28], [1.576155024E12, 58395.23], [1.576154852E12, 57942.0], [1.576154822E12, 54124.0], [1.576155035E12, 58385.96], [1.576155252E12, 58937.75], [1.576154945E12, 58559.0], [1.576154863E12, 58250.0], [1.576154961E12, 58534.28], [1.576154752E12, 6073.0], [1.576154965E12, 58503.38], [1.576154879E12, 58250.0], [1.576154793E12, 47705.0], [1.576154957E12, 58559.0], [1.576155256E12, 58912.25], [1.576155297E12, 58848.5], [1.576155002E12, 58450.85], [1.576154916E12, 58559.0], [1.576155043E12, 58863.19999999999], [1.576155228E12, 59003.38], [1.576154843E12, 55076.0], [1.576154974E12, 58500.29], [1.576154925E12, 58559.0], [1.576154839E12, 54124.0], [1.576154884E12, 58250.0], [1.576154941E12, 58559.0], [1.5761549E12, 58250.0], [1.576155064E12, 58822.43000000001], [1.576154978E12, 58491.02], [1.576155322E12, 58742.25000000001], [1.576154937E12, 58559.0], [1.576155236E12, 58963.25], [1.576154851E12, 57942.0], [1.57615515E12, 59048.36], [1.576155079E12, 59103.72], [1.57615478E12, 29163.0], [1.576155292E12, 58869.75], [1.576154997E12, 58463.21], [1.576155296E12, 58852.74999999999], [1.576155124E12, 59079.5], [1.576155251E12, 58942.0], [1.576154776E12, 26110.0], [1.576154903E12, 58559.0], [1.576154821E12, 54124.0], [1.576155247E12, 58950.5], [1.576154862E12, 57942.0], [1.576154792E12, 45650.0], [1.576154751E12, 4475.0], [1.576154964E12, 58521.92], [1.576154878E12, 58250.0], [1.576155128E12, 59065.66], [1.576155255E12, 58925.0], [1.576155087E12, 59093.34], [1.576154788E12, 42437.0], [1.576155214E12, 59010.3], [1.576155313E12, 58818.75], [1.576155317E12, 58767.75], [1.576155018E12, 58416.86], [1.576155309E12, 58823.0], [1.576154924E12, 58559.0], [1.576154944E12, 58559.0], [1.576154858E12, 57942.0], [1.576154985E12, 58472.48], [1.576154899E12, 58250.0], [1.576154936E12, 58559.0], [1.576155063E12, 58830.14], [1.57615519E12, 59031.06], [1.576154768E12, 21260.0], [1.576155194E12, 59020.67999999999], [1.576155235E12, 58976.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.576155037E12, 57240.299999999996], [1.576154779E12, 28096.0], [1.576155291E12, 57949.0], [1.576155168E12, 58070.3], [1.576154861E12, 54943.24999999999], [1.576154775E12, 25766.0], [1.576154902E12, 57225.65], [1.576154906E12, 57460.049999999996], [1.57615482E12, 48667.84999999999], [1.576155246E12, 57947.5], [1.576154791E12, 45548.3], [1.576155004E12, 57489.35], [1.576154836E12, 47705.0], [1.57615475E12, 3864.0], [1.576154963E12, 57830.35], [1.576155E12, 57598.0], [1.576155213E12, 58015.7], [1.576155127E12, 58144.1], [1.576154959E12, 57460.049999999996], [1.576155299E12, 58082.7], [1.576154845E12, 54137.4], [1.576155017E12, 57460.049999999996], [1.576155316E12, 58041.6], [1.576154796E12, 47656.0], [1.5761548E12, 48988.799999999974], [1.576154927E12, 57342.85], [1.576154755E12, 8471.0], [1.576155267E12, 57951.5], [1.576155025E12, 57298.899999999994], [1.576155324E12, 57950.5], [1.576155021E12, 57372.149999999994], [1.57615532E12, 57964.8], [1.576155234E12, 57951.0], [1.576155062E12, 57949.5], [1.576155275E12, 57949.5], [1.576154853E12, 54187.65], [1.576155193E12, 58033.9], [1.576155107E12, 58015.7], [1.576155122E12, 58164.299999999996], [1.576155036E12, 57254.950000000004], [1.576155249E12, 58009.6], [1.576155163E12, 58079.4], [1.57615504E12, 57504.0], [1.576155081E12, 58052.1], [1.576154995E12, 57621.5], [1.576155294E12, 58101.6], [1.576155245E12, 57948.0], [1.576154749E12, 3158.0], [1.576154962E12, 57850.65], [1.576154876E12, 56928.95], [1.57615479E12, 44472.799999999996], [1.576155003E12, 57515.74999999999], [1.576155298E12, 58085.4], [1.576155126E12, 58149.15], [1.57615513E12, 58134.0], [1.576154958E12, 57489.35], [1.576155171E12, 58061.2], [1.576155016E12, 57474.700000000004], [1.576154844E12, 54140.75], [1.57615527E12, 57951.0], [1.576154975E12, 57739.0], [1.576155274E12, 57950.5], [1.57615484E12, 51086.299999999996], [1.576155266E12, 57952.0], [1.576154881E12, 56600.350000000006], [1.576154795E12, 47663.0], [1.576154926E12, 57386.799999999996], [1.576154983E12, 57680.25], [1.576155323E12, 57951.0], [1.576155319E12, 57977.6], [1.57615502E12, 57386.799999999996], [1.576155233E12, 57951.5], [1.576155147E12, 58115.8], [1.576155024E12, 57313.549999999996], [1.576154852E12, 54235.25], [1.576154822E12, 48025.94999999998], [1.576155035E12, 57269.6], [1.576155252E12, 57996.8], [1.576154945E12, 57525.9], [1.576154863E12, 57093.25], [1.576154961E12, 57860.799999999996], [1.576154752E12, 6073.0], [1.576154965E12, 57759.299999999996], [1.576154879E12, 56764.649999999994], [1.576154793E12, 47666.5], [1.576154957E12, 57504.0], [1.576155256E12, 57958.399999999994], [1.576155297E12, 58096.2], [1.576155002E12, 57562.75], [1.576154916E12, 57430.75], [1.576155043E12, 57489.35], [1.576155228E12, 57979.299999999996], [1.576154843E12, 54174.25], [1.576154974E12, 57749.15], [1.576154925E12, 57401.45], [1.576154839E12, 47701.5], [1.576154884E12, 56518.19999999998], [1.576154941E12, 57613.5], [1.5761549E12, 57240.299999999996], [1.576155064E12, 57948.5], [1.576154978E12, 57715.5], [1.576155322E12, 57958.399999999994], [1.576154937E12, 57635.4], [1.576155236E12, 57948.5], [1.576154851E12, 54279.49999999999], [1.57615515E12, 58097.6], [1.576155079E12, 58061.2], [1.57615478E12, 29163.0], [1.576155292E12, 58109.7], [1.576154997E12, 57609.75], [1.576155296E12, 58098.9], [1.576155124E12, 58159.25], [1.576155251E12, 58003.2], [1.576154776E12, 26110.0], [1.576154903E12, 57504.0], [1.576154821E12, 48346.90000000001], [1.576155247E12, 58016.0], [1.576154862E12, 55704.0], [1.576154792E12, 45531.35], [1.576154751E12, 4475.0], [1.576154964E12, 57820.2], [1.576154878E12, 56846.79999999999], [1.576155128E12, 58139.049999999996], [1.576155255E12, 57977.6], [1.576155087E12, 58033.9], [1.576154788E12, 42432.25], [1.576155214E12, 57997.5], [1.576155313E12, 58073.6], [1.576155317E12, 57996.8], [1.576155018E12, 57416.1], [1.576155309E12, 58080.0], [1.576154924E12, 57416.1], [1.576154944E12, 57547.799999999996], [1.576154858E12, 54184.3], [1.576154985E12, 57645.0], [1.576154899E12, 56189.600000000006], [1.576154936E12, 57679.2], [1.576155063E12, 57949.0], [1.57615519E12, 58052.1], [1.576154768E12, 21260.0], [1.576155194E12, 58024.799999999996], [1.576155235E12, 57950.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.576155324E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 43342.5, "minX": 1000.0, "maxY": 58960.0, "series": [{"data": [[1000.0, 43342.5], [2000.0, 51050.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3000.0, 58960.0], [1000.0, 58789.0], [2000.0, 58784.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 3000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 43342.5, "minX": 1000.0, "maxY": 58960.0, "series": [{"data": [[1000.0, 43342.5], [2000.0, 51050.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3000.0, 58960.0], [1000.0, 58789.0], [2000.0, 58784.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 3000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576154745E12, "maxY": 26.0, "series": [{"data": [[1.576155037E12, 1.0], [1.576154779E12, 1.0], [1.576155291E12, 1.0], [1.576155168E12, 1.0], [1.576155082E12, 1.0], [1.576155295E12, 1.0], [1.576155209E12, 1.0], [1.57615491E12, 1.0], [1.576154861E12, 1.0], [1.576154775E12, 1.0], [1.576155201E12, 1.0], [1.576154902E12, 1.0], [1.576155205E12, 2.0], [1.576154906E12, 3.0], [1.57615482E12, 1.0], [1.576155246E12, 1.0], [1.576154791E12, 4.0], [1.576155004E12, 2.0], [1.576154922E12, 3.0], [1.576154836E12, 1.0], [1.57615475E12, 3.0], [1.576154963E12, 2.0], [1.576155E12, 1.0], [1.576155213E12, 2.0], [1.576155127E12, 1.0], [1.576154746E12, 26.0], [1.576154959E12, 2.0], [1.576155299E12, 1.0], [1.576154845E12, 1.0], [1.576155185E12, 2.0], [1.576155099E12, 1.0], [1.576155189E12, 1.0], [1.576154804E12, 4.0], [1.576155017E12, 1.0], [1.576154796E12, 2.0], [1.576154923E12, 1.0], [1.576155222E12, 1.0], [1.5761548E12, 2.0], [1.576154927E12, 3.0], [1.576154755E12, 1.0], [1.576155267E12, 1.0], [1.576155025E12, 1.0], [1.576155242E12, 1.0], [1.576155021E12, 1.0], [1.576155234E12, 1.0], [1.576155062E12, 6.0], [1.576155275E12, 3.0], [1.576154853E12, 2.0], [1.576155193E12, 2.0], [1.576155107E12, 2.0], [1.576155208E12, 1.0], [1.576155122E12, 2.0], [1.576155036E12, 1.0], [1.576155249E12, 1.0], [1.576155163E12, 2.0], [1.57615504E12, 2.0], [1.576155253E12, 1.0], [1.576154995E12, 2.0], [1.576155294E12, 3.0], [1.576155245E12, 1.0], [1.576154864E12, 2.0], [1.576155077E12, 1.0], [1.576155118E12, 1.0], [1.576154749E12, 1.0], [1.576154962E12, 2.0], [1.576154876E12, 2.0], [1.57615479E12, 1.0], [1.576155003E12, 4.0], [1.576154921E12, 2.0], [1.576155298E12, 4.0], [1.576155126E12, 2.0], [1.576155216E12, 1.0], [1.57615513E12, 1.0], [1.576154745E12, 4.0], [1.576154958E12, 1.0], [1.576155171E12, 1.0], [1.576155016E12, 1.0], [1.576154844E12, 10.0], [1.57615527E12, 2.0], [1.576155061E12, 2.0], [1.576154975E12, 1.0], [1.576155274E12, 1.0], [1.57615484E12, 1.0], [1.576155266E12, 1.0], [1.576154881E12, 2.0], [1.57615518E12, 2.0], [1.576154795E12, 1.0], [1.576155094E12, 2.0], [1.576154926E12, 1.0], [1.576155139E12, 1.0], [1.576154983E12, 3.0], [1.5761552E12, 1.0], [1.576155155E12, 1.0], [1.57615502E12, 2.0], [1.576155233E12, 4.0], [1.576155147E12, 2.0], [1.576155024E12, 5.0], [1.576154852E12, 1.0], [1.57615508E12, 1.0], [1.576155121E12, 4.0], [1.576154822E12, 1.0], [1.576155035E12, 2.0], [1.576155252E12, 3.0], [1.576154945E12, 1.0], [1.576155158E12, 1.0], [1.576154863E12, 3.0], [1.576155076E12, 2.0], [1.57615492E12, 1.0], [1.576154961E12, 4.0], [1.576154752E12, 1.0], [1.576154965E12, 6.0], [1.576154879E12, 1.0], [1.576155178E12, 1.0], [1.576154793E12, 4.0], [1.576154957E12, 1.0], [1.576155256E12, 3.0], [1.576155297E12, 1.0], [1.576155211E12, 1.0], [1.576154789E12, 1.0], [1.576155002E12, 3.0], [1.576154916E12, 2.0], [1.576155043E12, 1.0], [1.576155101E12, 1.0], [1.576155228E12, 2.0], [1.576154843E12, 3.0], [1.576155142E12, 3.0], [1.576155146E12, 2.0], [1.576154974E12, 1.0], [1.576155187E12, 1.0], [1.576154925E12, 1.0], [1.576154839E12, 1.0], [1.576155138E12, 1.0], [1.576155179E12, 2.0], [1.576155183E12, 1.0], [1.576154884E12, 1.0], [1.576154941E12, 1.0], [1.5761549E12, 2.0], [1.576154814E12, 1.0], [1.576155064E12, 1.0], [1.576154978E12, 2.0], [1.576154937E12, 2.0], [1.576155236E12, 3.0], [1.576154851E12, 2.0], [1.57615515E12, 2.0], [1.576155079E12, 2.0], [1.57615478E12, 1.0], [1.576155292E12, 4.0], [1.576155206E12, 2.0], [1.576154997E12, 1.0], [1.576155296E12, 1.0], [1.576155124E12, 1.0], [1.576155251E12, 1.0], [1.576154776E12, 4.0], [1.576154903E12, 5.0], [1.576154821E12, 1.0], [1.57615512E12, 2.0], [1.576155247E12, 1.0], [1.576154862E12, 1.0], [1.576154792E12, 1.0], [1.576155259E12, 1.0], [1.576154751E12, 3.0], [1.576154964E12, 1.0], [1.576154878E12, 1.0], [1.576155128E12, 1.0], [1.576155255E12, 3.0], [1.576155083E12, 5.0], [1.576155087E12, 2.0], [1.576154788E12, 2.0], [1.576155214E12, 2.0], [1.576155186E12, 1.0], [1.576154805E12, 4.0], [1.576155018E12, 3.0], [1.576155059E12, 1.0], [1.576155096E12, 1.0], [1.576154924E12, 1.0], [1.576155141E12, 1.0], [1.576155153E12, 1.0], [1.576154944E12, 3.0], [1.576154858E12, 1.0], [1.576154985E12, 3.0], [1.576154899E12, 4.0], [1.576154936E12, 1.0], [1.576155063E12, 1.0], [1.57615519E12, 1.0], [1.576154768E12, 1.0], [1.576154981E12, 1.0], [1.576155194E12, 1.0], [1.576155235E12, 2.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.576155299E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576154749E12, "maxY": 10.0, "series": [{"data": [[1.576155037E12, 1.0], [1.576154779E12, 1.0], [1.576155291E12, 1.0], [1.576155168E12, 1.0], [1.576154861E12, 1.0], [1.576154775E12, 1.0], [1.576154902E12, 1.0], [1.576154906E12, 3.0], [1.57615482E12, 1.0], [1.576155246E12, 1.0], [1.576154791E12, 4.0], [1.576155004E12, 2.0], [1.576154836E12, 1.0], [1.57615475E12, 3.0], [1.576154963E12, 2.0], [1.576155E12, 1.0], [1.576155213E12, 1.0], [1.576155127E12, 1.0], [1.576154959E12, 2.0], [1.576155299E12, 1.0], [1.576154845E12, 1.0], [1.576155017E12, 1.0], [1.576155316E12, 5.0], [1.576154796E12, 2.0], [1.5761548E12, 2.0], [1.576154927E12, 3.0], [1.576154755E12, 1.0], [1.576155267E12, 1.0], [1.576155025E12, 1.0], [1.576155324E12, 1.0], [1.576155021E12, 1.0], [1.57615532E12, 2.0], [1.576155234E12, 1.0], [1.576155062E12, 4.0], [1.576155275E12, 2.0], [1.576154853E12, 2.0], [1.576155193E12, 2.0], [1.576155107E12, 2.0], [1.576155122E12, 1.0], [1.576155036E12, 1.0], [1.576155249E12, 1.0], [1.576155163E12, 2.0], [1.57615504E12, 2.0], [1.576155081E12, 1.0], [1.576154995E12, 2.0], [1.576155294E12, 3.0], [1.576155245E12, 1.0], [1.576154749E12, 1.0], [1.576154962E12, 1.0], [1.576154876E12, 2.0], [1.57615479E12, 1.0], [1.576155003E12, 4.0], [1.576155298E12, 4.0], [1.576155126E12, 2.0], [1.57615513E12, 1.0], [1.576154958E12, 1.0], [1.576155171E12, 1.0], [1.576155016E12, 1.0], [1.576154844E12, 10.0], [1.57615527E12, 1.0], [1.576154975E12, 1.0], [1.576155274E12, 1.0], [1.57615484E12, 1.0], [1.576155266E12, 1.0], [1.576154881E12, 2.0], [1.576154795E12, 1.0], [1.576154926E12, 1.0], [1.576154983E12, 3.0], [1.576155323E12, 3.0], [1.576155319E12, 3.0], [1.57615502E12, 2.0], [1.576155233E12, 4.0], [1.576155147E12, 2.0], [1.576155024E12, 4.0], [1.576154852E12, 1.0], [1.576154822E12, 1.0], [1.576155035E12, 2.0], [1.576155252E12, 1.0], [1.576154945E12, 1.0], [1.576154863E12, 1.0], [1.576154961E12, 5.0], [1.576154752E12, 1.0], [1.576154965E12, 6.0], [1.576154879E12, 1.0], [1.576154793E12, 4.0], [1.576154957E12, 1.0], [1.576155256E12, 3.0], [1.576155297E12, 1.0], [1.576155002E12, 3.0], [1.576154916E12, 2.0], [1.576155043E12, 1.0], [1.576155228E12, 2.0], [1.576154843E12, 3.0], [1.576154974E12, 1.0], [1.576154925E12, 1.0], [1.576154839E12, 1.0], [1.576154884E12, 1.0], [1.576154941E12, 1.0], [1.5761549E12, 2.0], [1.576155064E12, 1.0], [1.576154978E12, 2.0], [1.576155322E12, 1.0], [1.576154937E12, 2.0], [1.576155236E12, 3.0], [1.576154851E12, 2.0], [1.57615515E12, 2.0], [1.576155079E12, 1.0], [1.57615478E12, 1.0], [1.576155292E12, 3.0], [1.576154997E12, 1.0], [1.576155296E12, 1.0], [1.576155124E12, 1.0], [1.576155251E12, 1.0], [1.576154776E12, 4.0], [1.576154903E12, 1.0], [1.576154821E12, 1.0], [1.576155247E12, 1.0], [1.576154862E12, 1.0], [1.576154792E12, 1.0], [1.576154751E12, 3.0], [1.576154964E12, 1.0], [1.576154878E12, 1.0], [1.576155128E12, 1.0], [1.576155255E12, 3.0], [1.576155087E12, 2.0], [1.576154788E12, 3.0], [1.576155214E12, 2.0], [1.576155313E12, 1.0], [1.576155317E12, 7.0], [1.576155018E12, 3.0], [1.576155309E12, 1.0], [1.576154924E12, 1.0], [1.576154944E12, 3.0], [1.576154858E12, 1.0], [1.576154985E12, 3.0], [1.576154899E12, 4.0], [1.576154936E12, 1.0], [1.576155063E12, 1.0], [1.57615519E12, 1.0], [1.576154768E12, 1.0], [1.576155194E12, 1.0], [1.576155235E12, 2.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.57615508E12, 1.0], [1.576155121E12, 4.0], [1.576155078E12, 1.0], [1.576155334E12, 1.0], [1.576155295E12, 1.0], [1.576155209E12, 1.0], [1.576155252E12, 2.0], [1.57615491E12, 1.0], [1.576155201E12, 1.0], [1.576155158E12, 1.0], [1.576155205E12, 2.0], [1.576154863E12, 2.0], [1.576155076E12, 2.0], [1.57615492E12, 1.0], [1.576154922E12, 3.0], [1.576155178E12, 1.0], [1.576155213E12, 1.0], [1.576155211E12, 1.0], [1.576155101E12, 1.0], [1.576155314E12, 1.0], [1.576155185E12, 2.0], [1.576155099E12, 1.0], [1.576155142E12, 3.0], [1.576155189E12, 1.0], [1.576155146E12, 2.0], [1.576154804E12, 4.0], [1.576155187E12, 1.0], [1.576155138E12, 1.0], [1.576154923E12, 1.0], [1.576155179E12, 2.0], [1.576155222E12, 1.0], [1.576155312E12, 1.0], [1.576155183E12, 1.0], [1.57615531E12, 1.0], [1.576155242E12, 1.0], [1.576154814E12, 1.0], [1.576155062E12, 2.0], [1.576155275E12, 1.0], [1.576155208E12, 1.0], [1.576155122E12, 1.0], [1.576155292E12, 1.0], [1.576155206E12, 2.0], [1.576155253E12, 1.0], [1.576154903E12, 4.0], [1.576154864E12, 2.0], [1.576155077E12, 1.0], [1.57615512E12, 2.0], [1.576155118E12, 1.0], [1.576155259E12, 1.0], [1.576154921E12, 2.0], [1.576155083E12, 5.0], [1.576155216E12, 1.0], [1.576155186E12, 1.0], [1.57615527E12, 1.0], [1.576154805E12, 4.0], [1.576155061E12, 2.0], [1.576155059E12, 1.0], [1.576155096E12, 1.0], [1.57615518E12, 2.0], [1.576155094E12, 2.0], [1.576155141E12, 1.0], [1.576155311E12, 2.0], [1.576155139E12, 1.0], [1.576155153E12, 1.0], [1.5761552E12, 1.0], [1.576155155E12, 1.0], [1.576154981E12, 1.0], [1.576155024E12, 1.0]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.576155334E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576154749E12, "maxY": 10.0, "series": [{"data": [[1.57615508E12, 1.0], [1.576155121E12, 4.0], [1.576155078E12, 1.0], [1.576155334E12, 1.0], [1.576155295E12, 1.0], [1.576155209E12, 1.0], [1.576155252E12, 2.0], [1.57615491E12, 1.0], [1.576155201E12, 1.0], [1.576155158E12, 1.0], [1.576155205E12, 2.0], [1.576154863E12, 2.0], [1.576155076E12, 2.0], [1.57615492E12, 1.0], [1.576154922E12, 3.0], [1.576155178E12, 1.0], [1.576155213E12, 1.0], [1.576155211E12, 1.0], [1.576155101E12, 1.0], [1.576155314E12, 1.0], [1.576155185E12, 2.0], [1.576155099E12, 1.0], [1.576155142E12, 3.0], [1.576155189E12, 1.0], [1.576155146E12, 2.0], [1.576154804E12, 4.0], [1.576155187E12, 1.0], [1.576155138E12, 1.0], [1.576154923E12, 1.0], [1.576155179E12, 2.0], [1.576155222E12, 1.0], [1.576155312E12, 1.0], [1.576155183E12, 1.0], [1.57615531E12, 1.0], [1.576155242E12, 1.0], [1.576154814E12, 1.0], [1.576155062E12, 2.0], [1.576155275E12, 1.0], [1.576155208E12, 1.0], [1.576155122E12, 1.0], [1.576155292E12, 1.0], [1.576155206E12, 2.0], [1.576155253E12, 1.0], [1.576154903E12, 4.0], [1.576154864E12, 2.0], [1.576155077E12, 1.0], [1.57615512E12, 2.0], [1.576155118E12, 1.0], [1.576155259E12, 1.0], [1.576154921E12, 2.0], [1.576155083E12, 5.0], [1.576155216E12, 1.0], [1.576155186E12, 1.0], [1.57615527E12, 1.0], [1.576154805E12, 4.0], [1.576155061E12, 2.0], [1.576155059E12, 1.0], [1.576155096E12, 1.0], [1.57615518E12, 2.0], [1.576155094E12, 2.0], [1.576155141E12, 1.0], [1.576155311E12, 2.0], [1.576155139E12, 1.0], [1.576155153E12, 1.0], [1.5761552E12, 1.0], [1.576155155E12, 1.0], [1.576154981E12, 1.0], [1.576155024E12, 1.0]], "isOverall": false, "label": "CreateRatesAvailability-failure", "isController": false}, {"data": [[1.576155037E12, 1.0], [1.576154779E12, 1.0], [1.576155291E12, 1.0], [1.576155168E12, 1.0], [1.576154861E12, 1.0], [1.576154775E12, 1.0], [1.576154902E12, 1.0], [1.576154906E12, 3.0], [1.57615482E12, 1.0], [1.576155246E12, 1.0], [1.576154791E12, 4.0], [1.576155004E12, 2.0], [1.576154836E12, 1.0], [1.57615475E12, 3.0], [1.576154963E12, 2.0], [1.576155E12, 1.0], [1.576155213E12, 1.0], [1.576155127E12, 1.0], [1.576154959E12, 2.0], [1.576155299E12, 1.0], [1.576154845E12, 1.0], [1.576155017E12, 1.0], [1.576155316E12, 5.0], [1.576154796E12, 2.0], [1.5761548E12, 2.0], [1.576154927E12, 3.0], [1.576154755E12, 1.0], [1.576155267E12, 1.0], [1.576155025E12, 1.0], [1.576155324E12, 1.0], [1.576155021E12, 1.0], [1.57615532E12, 2.0], [1.576155234E12, 1.0], [1.576155062E12, 4.0], [1.576155275E12, 2.0], [1.576154853E12, 2.0], [1.576155193E12, 2.0], [1.576155107E12, 2.0], [1.576155122E12, 1.0], [1.576155036E12, 1.0], [1.576155249E12, 1.0], [1.576155163E12, 2.0], [1.57615504E12, 2.0], [1.576155081E12, 1.0], [1.576154995E12, 2.0], [1.576155294E12, 3.0], [1.576155245E12, 1.0], [1.576154749E12, 1.0], [1.576154962E12, 1.0], [1.576154876E12, 2.0], [1.57615479E12, 1.0], [1.576155003E12, 4.0], [1.576155298E12, 4.0], [1.576155126E12, 2.0], [1.57615513E12, 1.0], [1.576154958E12, 1.0], [1.576155171E12, 1.0], [1.576155016E12, 1.0], [1.576154844E12, 10.0], [1.57615527E12, 1.0], [1.576154975E12, 1.0], [1.576155274E12, 1.0], [1.57615484E12, 1.0], [1.576155266E12, 1.0], [1.576154881E12, 2.0], [1.576154795E12, 1.0], [1.576154926E12, 1.0], [1.576154983E12, 3.0], [1.576155323E12, 3.0], [1.576155319E12, 3.0], [1.57615502E12, 2.0], [1.576155233E12, 4.0], [1.576155147E12, 2.0], [1.576155024E12, 4.0], [1.576154852E12, 1.0], [1.576154822E12, 1.0], [1.576155035E12, 2.0], [1.576155252E12, 1.0], [1.576154945E12, 1.0], [1.576154863E12, 1.0], [1.576154961E12, 5.0], [1.576154752E12, 1.0], [1.576154965E12, 6.0], [1.576154879E12, 1.0], [1.576154793E12, 4.0], [1.576154957E12, 1.0], [1.576155256E12, 3.0], [1.576155297E12, 1.0], [1.576155002E12, 3.0], [1.576154916E12, 2.0], [1.576155043E12, 1.0], [1.576155228E12, 2.0], [1.576154843E12, 3.0], [1.576154974E12, 1.0], [1.576154925E12, 1.0], [1.576154839E12, 1.0], [1.576154884E12, 1.0], [1.576154941E12, 1.0], [1.5761549E12, 2.0], [1.576155064E12, 1.0], [1.576154978E12, 2.0], [1.576155322E12, 1.0], [1.576154937E12, 2.0], [1.576155236E12, 3.0], [1.576154851E12, 2.0], [1.57615515E12, 2.0], [1.576155079E12, 1.0], [1.57615478E12, 1.0], [1.576155292E12, 3.0], [1.576154997E12, 1.0], [1.576155296E12, 1.0], [1.576155124E12, 1.0], [1.576155251E12, 1.0], [1.576154776E12, 4.0], [1.576154903E12, 1.0], [1.576154821E12, 1.0], [1.576155247E12, 1.0], [1.576154862E12, 1.0], [1.576154792E12, 1.0], [1.576154751E12, 3.0], [1.576154964E12, 1.0], [1.576154878E12, 1.0], [1.576155128E12, 1.0], [1.576155255E12, 3.0], [1.576155087E12, 2.0], [1.576154788E12, 3.0], [1.576155214E12, 2.0], [1.576155313E12, 1.0], [1.576155317E12, 7.0], [1.576155018E12, 3.0], [1.576155309E12, 1.0], [1.576154924E12, 1.0], [1.576154944E12, 3.0], [1.576154858E12, 1.0], [1.576154985E12, 3.0], [1.576154899E12, 4.0], [1.576154936E12, 1.0], [1.576155063E12, 1.0], [1.57615519E12, 1.0], [1.576154768E12, 1.0], [1.576155194E12, 1.0], [1.576155235E12, 2.0]], "isOverall": false, "label": "CreateRatesAvailability-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.576155334E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.576154749E12, "maxY": 10.0, "series": [{"data": [[1.576155037E12, 1.0], [1.576154779E12, 1.0], [1.576155291E12, 1.0], [1.576155168E12, 1.0], [1.576154861E12, 1.0], [1.576154775E12, 1.0], [1.576154902E12, 1.0], [1.576154906E12, 3.0], [1.57615482E12, 1.0], [1.576155246E12, 1.0], [1.576154791E12, 4.0], [1.576155004E12, 2.0], [1.576154836E12, 1.0], [1.57615475E12, 3.0], [1.576154963E12, 2.0], [1.576155E12, 1.0], [1.576155213E12, 1.0], [1.576155127E12, 1.0], [1.576154959E12, 2.0], [1.576155299E12, 1.0], [1.576154845E12, 1.0], [1.576155017E12, 1.0], [1.576155316E12, 5.0], [1.576154796E12, 2.0], [1.5761548E12, 2.0], [1.576154927E12, 3.0], [1.576154755E12, 1.0], [1.576155267E12, 1.0], [1.576155025E12, 1.0], [1.576155324E12, 1.0], [1.576155021E12, 1.0], [1.57615532E12, 2.0], [1.576155234E12, 1.0], [1.576155062E12, 4.0], [1.576155275E12, 2.0], [1.576154853E12, 2.0], [1.576155193E12, 2.0], [1.576155107E12, 2.0], [1.576155122E12, 1.0], [1.576155036E12, 1.0], [1.576155249E12, 1.0], [1.576155163E12, 2.0], [1.57615504E12, 2.0], [1.576155081E12, 1.0], [1.576154995E12, 2.0], [1.576155294E12, 3.0], [1.576155245E12, 1.0], [1.576154749E12, 1.0], [1.576154962E12, 1.0], [1.576154876E12, 2.0], [1.57615479E12, 1.0], [1.576155003E12, 4.0], [1.576155298E12, 4.0], [1.576155126E12, 2.0], [1.57615513E12, 1.0], [1.576154958E12, 1.0], [1.576155171E12, 1.0], [1.576155016E12, 1.0], [1.576154844E12, 10.0], [1.57615527E12, 1.0], [1.576154975E12, 1.0], [1.576155274E12, 1.0], [1.57615484E12, 1.0], [1.576155266E12, 1.0], [1.576154881E12, 2.0], [1.576154795E12, 1.0], [1.576154926E12, 1.0], [1.576154983E12, 3.0], [1.576155323E12, 3.0], [1.576155319E12, 3.0], [1.57615502E12, 2.0], [1.576155233E12, 4.0], [1.576155147E12, 2.0], [1.576155024E12, 4.0], [1.576154852E12, 1.0], [1.576154822E12, 1.0], [1.576155035E12, 2.0], [1.576155252E12, 1.0], [1.576154945E12, 1.0], [1.576154863E12, 1.0], [1.576154961E12, 5.0], [1.576154752E12, 1.0], [1.576154965E12, 6.0], [1.576154879E12, 1.0], [1.576154793E12, 4.0], [1.576154957E12, 1.0], [1.576155256E12, 3.0], [1.576155297E12, 1.0], [1.576155002E12, 3.0], [1.576154916E12, 2.0], [1.576155043E12, 1.0], [1.576155228E12, 2.0], [1.576154843E12, 3.0], [1.576154974E12, 1.0], [1.576154925E12, 1.0], [1.576154839E12, 1.0], [1.576154884E12, 1.0], [1.576154941E12, 1.0], [1.5761549E12, 2.0], [1.576155064E12, 1.0], [1.576154978E12, 2.0], [1.576155322E12, 1.0], [1.576154937E12, 2.0], [1.576155236E12, 3.0], [1.576154851E12, 2.0], [1.57615515E12, 2.0], [1.576155079E12, 1.0], [1.57615478E12, 1.0], [1.576155292E12, 3.0], [1.576154997E12, 1.0], [1.576155296E12, 1.0], [1.576155124E12, 1.0], [1.576155251E12, 1.0], [1.576154776E12, 4.0], [1.576154903E12, 1.0], [1.576154821E12, 1.0], [1.576155247E12, 1.0], [1.576154862E12, 1.0], [1.576154792E12, 1.0], [1.576154751E12, 3.0], [1.576154964E12, 1.0], [1.576154878E12, 1.0], [1.576155128E12, 1.0], [1.576155255E12, 3.0], [1.576155087E12, 2.0], [1.576154788E12, 3.0], [1.576155214E12, 2.0], [1.576155313E12, 1.0], [1.576155317E12, 7.0], [1.576155018E12, 3.0], [1.576155309E12, 1.0], [1.576154924E12, 1.0], [1.576154944E12, 3.0], [1.576154858E12, 1.0], [1.576154985E12, 3.0], [1.576154899E12, 4.0], [1.576154936E12, 1.0], [1.576155063E12, 1.0], [1.57615519E12, 1.0], [1.576154768E12, 1.0], [1.576155194E12, 1.0], [1.576155235E12, 2.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.57615508E12, 1.0], [1.576155121E12, 4.0], [1.576155078E12, 1.0], [1.576155334E12, 1.0], [1.576155295E12, 1.0], [1.576155209E12, 1.0], [1.576155252E12, 2.0], [1.57615491E12, 1.0], [1.576155201E12, 1.0], [1.576155158E12, 1.0], [1.576155205E12, 2.0], [1.576154863E12, 2.0], [1.576155076E12, 2.0], [1.57615492E12, 1.0], [1.576154922E12, 3.0], [1.576155178E12, 1.0], [1.576155213E12, 1.0], [1.576155211E12, 1.0], [1.576155101E12, 1.0], [1.576155314E12, 1.0], [1.576155185E12, 2.0], [1.576155099E12, 1.0], [1.576155142E12, 3.0], [1.576155189E12, 1.0], [1.576155146E12, 2.0], [1.576154804E12, 4.0], [1.576155187E12, 1.0], [1.576155138E12, 1.0], [1.576154923E12, 1.0], [1.576155179E12, 2.0], [1.576155222E12, 1.0], [1.576155312E12, 1.0], [1.576155183E12, 1.0], [1.57615531E12, 1.0], [1.576155242E12, 1.0], [1.576154814E12, 1.0], [1.576155062E12, 2.0], [1.576155275E12, 1.0], [1.576155208E12, 1.0], [1.576155122E12, 1.0], [1.576155292E12, 1.0], [1.576155206E12, 2.0], [1.576155253E12, 1.0], [1.576154903E12, 4.0], [1.576154864E12, 2.0], [1.576155077E12, 1.0], [1.57615512E12, 2.0], [1.576155118E12, 1.0], [1.576155259E12, 1.0], [1.576154921E12, 2.0], [1.576155083E12, 5.0], [1.576155216E12, 1.0], [1.576155186E12, 1.0], [1.57615527E12, 1.0], [1.576154805E12, 4.0], [1.576155061E12, 2.0], [1.576155059E12, 1.0], [1.576155096E12, 1.0], [1.57615518E12, 2.0], [1.576155094E12, 2.0], [1.576155141E12, 1.0], [1.576155311E12, 2.0], [1.576155139E12, 1.0], [1.576155153E12, 1.0], [1.5761552E12, 1.0], [1.576155155E12, 1.0], [1.576154981E12, 1.0], [1.576155024E12, 1.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.576155334E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

